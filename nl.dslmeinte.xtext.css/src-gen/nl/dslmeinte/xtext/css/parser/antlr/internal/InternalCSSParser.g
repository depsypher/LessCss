/*
* generated by Xtext
*/
parser grammar InternalCSSParser;

options {
	tokenVocab=InternalCSSLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package nl.dslmeinte.xtext.css.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import nl.dslmeinte.xtext.css.services.CSSGrammarAccess;

}

@members {


	private CSSGrammarAccess grammarAccess;
	 	
	public InternalCSSParser(TokenStream input, CSSGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "Stylesheet";	
	} 
	   	   	
	@Override
	protected CSSGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleStylesheet
entryRuleStylesheet returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStylesheetRule()); }
	 iv_ruleStylesheet=ruleStylesheet 
	 { $current=$iv_ruleStylesheet.current; } 
	 EOF 
;

// Rule Stylesheet
ruleStylesheet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_64
    {
    	newLeafNode(otherlv_0, grammarAccess.getStylesheetAccess().getCharsetKeyword_0_0());
    }
(
(
		lv_charSet_1_0=RULE_STRING
		{
			newLeafNode(lv_charSet_1_0, grammarAccess.getStylesheetAccess().getCharSetSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStylesheetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"charSet",
        		lv_charSet_1_0, 
        		"STRING");
	    }

)
)
	otherlv_2=KEYWORD_10
    {
    	newLeafNode(otherlv_2, grammarAccess.getStylesheetAccess().getSemicolonKeyword_0_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getImportsImportDeclarationParserRuleCall_1_0()); 
	    }
		lv_imports_3_0=ruleImportDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"ImportDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStylesheetAccess().getStatementsCSSTopLevelStatementParserRuleCall_2_0()); 
	    }
		lv_statements_4_0=ruleCSSTopLevelStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStylesheetRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_4_0, 
        		"CSSTopLevelStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleCSSTopLevelStatement
entryRuleCSSTopLevelStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getCSSTopLevelStatementRule()); }
	 iv_ruleCSSTopLevelStatement=ruleCSSTopLevelStatement 
	 { $current=$iv_ruleCSSTopLevelStatement.current; } 
	 EOF 
;

// Rule CSSTopLevelStatement
ruleCSSTopLevelStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSTopLevelStatementAccess().getRuleSetParserRuleCall_0()); 
    }
    this_RuleSet_0=ruleRuleSet
    {
        $current = $this_RuleSet_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSTopLevelStatementAccess().getCSSOtherTopLevelDeclarationParserRuleCall_1()); 
    }
    this_CSSOtherTopLevelDeclaration_1=ruleCSSOtherTopLevelDeclaration
    {
        $current = $this_CSSOtherTopLevelDeclaration_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCSSOtherTopLevelDeclaration
entryRuleCSSOtherTopLevelDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getCSSOtherTopLevelDeclarationRule()); }
	 iv_ruleCSSOtherTopLevelDeclaration=ruleCSSOtherTopLevelDeclaration 
	 { $current=$iv_ruleCSSOtherTopLevelDeclaration.current; } 
	 EOF 
;

// Rule CSSOtherTopLevelDeclaration
ruleCSSOtherTopLevelDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getMediaDeclarationParserRuleCall_0()); 
    }
    this_MediaDeclaration_0=ruleMediaDeclaration
    {
        $current = $this_MediaDeclaration_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getPageDeclarationParserRuleCall_1()); 
    }
    this_PageDeclaration_1=rulePageDeclaration
    {
        $current = $this_PageDeclaration_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getNamespaceDeclarationParserRuleCall_2()); 
    }
    this_NamespaceDeclaration_2=ruleNamespaceDeclaration
    {
        $current = $this_NamespaceDeclaration_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getFontFaceDeclarationParserRuleCall_3()); 
    }
    this_FontFaceDeclaration_3=ruleFontFaceDeclaration
    {
        $current = $this_FontFaceDeclaration_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getImportDeclarationRule()); }
	 iv_ruleImportDeclaration=ruleImportDeclaration 
	 { $current=$iv_ruleImportDeclaration.current; } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_59
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportDeclarationAccess().getImportKeyword_0());
    }
((
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_url_2_0=RULE_URL
		{
			newLeafNode(lv_url_2_0, grammarAccess.getImportDeclarationAccess().getUrlURLTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_2_0, 
        		"URL");
	    }

)
))((
(
		lv_media_3_0=RULE_IDENT
		{
			newLeafNode(lv_media_3_0, grammarAccess.getImportDeclarationAccess().getMediaIDENTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportDeclarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"media",
        		lv_media_3_0, 
        		"IDENT");
	    }

)
)(
	otherlv_4=KEYWORD_6
    {
    	newLeafNode(otherlv_4, grammarAccess.getImportDeclarationAccess().getCommaKeyword_2_1_0());
    }
(
(
		lv_media_5_0=RULE_IDENT
		{
			newLeafNode(lv_media_5_0, grammarAccess.getImportDeclarationAccess().getMediaIDENTTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportDeclarationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"media",
        		lv_media_5_0, 
        		"IDENT");
	    }

)
))*)?
	otherlv_6=KEYWORD_10
    {
    	newLeafNode(otherlv_6, grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleMediaDeclaration
entryRuleMediaDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMediaDeclarationRule()); }
	 iv_ruleMediaDeclaration=ruleMediaDeclaration 
	 { $current=$iv_ruleMediaDeclaration.current; } 
	 EOF 
;

// Rule MediaDeclaration
ruleMediaDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_55
    {
    	newLeafNode(otherlv_0, grammarAccess.getMediaDeclarationAccess().getMediaKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaDeclarationAccess().getMediaQueriesMediaQueryParserRuleCall_1_0()); 
	    }
		lv_mediaQueries_1_0=ruleMediaQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaDeclarationRule());
	        }
       		add(
       			$current, 
       			"mediaQueries",
        		lv_mediaQueries_1_0, 
        		"MediaQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=KEYWORD_6
    {
    	newLeafNode(otherlv_2, grammarAccess.getMediaDeclarationAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaDeclarationAccess().getMediaMediaQueryParserRuleCall_2_1_0()); 
	    }
		lv_media_3_0=ruleMediaQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaDeclarationRule());
	        }
       		add(
       			$current, 
       			"media",
        		lv_media_3_0, 
        		"MediaQuery");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_4=KEYWORD_16
    {
    	newLeafNode(otherlv_4, grammarAccess.getMediaDeclarationAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaDeclarationAccess().getMembersMediaDeclarationMembersParserRuleCall_4_0()); 
	    }
		lv_members_5_0=ruleMediaDeclarationMembers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaDeclarationRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"MediaDeclarationMembers");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_6=KEYWORD_18
    {
    	newLeafNode(otherlv_6, grammarAccess.getMediaDeclarationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleMediaDeclarationMembers
entryRuleMediaDeclarationMembers returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMediaDeclarationMembersRule()); }
	 iv_ruleMediaDeclarationMembers=ruleMediaDeclarationMembers 
	 { $current=$iv_ruleMediaDeclarationMembers.current; } 
	 EOF 
;

// Rule MediaDeclarationMembers
ruleMediaDeclarationMembers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMediaDeclarationMembersAccess().getRuleSetParserRuleCall_0()); 
    }
    this_RuleSet_0=ruleRuleSet
    {
        $current = $this_RuleSet_0.current;
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMediaDeclarationMembersAccess().getPropertyDeclarationParserRuleCall_1_0()); 
    }
    this_PropertyDeclaration_1=rulePropertyDeclaration
    {
        $current = $this_PropertyDeclaration_1.current;
        afterParserOrEnumRuleCall();
    }

	otherlv_2=KEYWORD_10
    {
    	newLeafNode(otherlv_2, grammarAccess.getMediaDeclarationMembersAccess().getSemicolonKeyword_1_1());
    }
))
;





// Entry rule entryRuleMediaQuery
entryRuleMediaQuery returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMediaQueryRule()); }
	 iv_ruleMediaQuery=ruleMediaQuery 
	 { $current=$iv_ruleMediaQuery.current; } 
	 EOF 
;

// Rule MediaQuery
ruleMediaQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_only_0_0=
	KEYWORD_43
    {
        newLeafNode(lv_only_0_0, grammarAccess.getMediaQueryAccess().getOnlyOnlyKeyword_0_0_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMediaQueryRule());
	        }
       		setWithLastConsumed($current, "only", true, "only");
	    }

)
)
    |(
(
		lv_not_1_0=
	KEYWORD_35
    {
        newLeafNode(lv_not_1_0, grammarAccess.getMediaQueryAccess().getNotNotKeyword_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMediaQueryRule());
	        }
       		setWithLastConsumed($current, "not", true, "not");
	    }

)
))?(
(
		lv_mediaType_2_0=RULE_IDENT
		{
			newLeafNode(lv_mediaType_2_0, grammarAccess.getMediaQueryAccess().getMediaTypeIDENTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMediaQueryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mediaType",
        		lv_mediaType_2_0, 
        		"IDENT");
	    }

)
)(
	otherlv_3=KEYWORD_33
    {
    	newLeafNode(otherlv_3, grammarAccess.getMediaQueryAccess().getAndKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_0_2_1_0()); 
	    }
		lv_expressions_4_0=ruleMediaQueryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaQueryRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_4_0, 
        		"MediaQueryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expressions_5_0=ruleMediaQueryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaQueryRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_5_0, 
        		"MediaQueryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_6=KEYWORD_33
    {
    	newLeafNode(otherlv_6, grammarAccess.getMediaQueryAccess().getAndKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_expressions_7_0=ruleMediaQueryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaQueryRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_7_0, 
        		"MediaQueryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleMediaQueryExpression
entryRuleMediaQueryExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMediaQueryExpressionRule()); }
	 iv_ruleMediaQueryExpression=ruleMediaQueryExpression 
	 { $current=$iv_ruleMediaQueryExpression.current; } 
	 EOF 
;

// Rule MediaQueryExpression
ruleMediaQueryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_2
    {
    	newLeafNode(otherlv_0, grammarAccess.getMediaQueryExpressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		lv_feature_1_0=RULE_IDENT
		{
			newLeafNode(lv_feature_1_0, grammarAccess.getMediaQueryExpressionAccess().getFeatureIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMediaQueryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature",
        		lv_feature_1_0, 
        		"IDENT");
	    }

)
)(
	otherlv_2=KEYWORD_9
    {
    	newLeafNode(otherlv_2, grammarAccess.getMediaQueryExpressionAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaQueryExpressionAccess().getExpressionValueLiteralParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleValueLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaQueryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"ValueLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_4=KEYWORD_3
    {
    	newLeafNode(otherlv_4, grammarAccess.getMediaQueryExpressionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulePageDeclaration
entryRulePageDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPageDeclarationRule()); }
	 iv_rulePageDeclaration=rulePageDeclaration 
	 { $current=$iv_rulePageDeclaration.current; } 
	 EOF 
;

// Rule PageDeclaration
rulePageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_46
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageDeclarationAccess().getPageKeyword_0());
    }
(
	otherlv_1=KEYWORD_9
    {
    	newLeafNode(otherlv_1, grammarAccess.getPageDeclarationAccess().getColonKeyword_1_0());
    }
(
(
		lv_pseudoPage_2_0=RULE_IDENT
		{
			newLeafNode(lv_pseudoPage_2_0, grammarAccess.getPageDeclarationAccess().getPseudoPageIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPageDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pseudoPage",
        		lv_pseudoPage_2_0, 
        		"IDENT");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getPageDeclarationAccess().getBodyRuleSetBodyParserRuleCall_2_0()); 
	    }
		lv_body_3_0=ruleRuleSetBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"RuleSetBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNamespaceDeclarationRule()); }
	 iv_ruleNamespaceDeclaration=ruleNamespaceDeclaration 
	 { $current=$iv_ruleNamespaceDeclaration.current; } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_69
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNamespaceDeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
)?(
(
(
		lv_url_2_1=RULE_STRING
		{
			newLeafNode(lv_url_2_1, grammarAccess.getNamespaceDeclarationAccess().getUrlSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_2_1, 
        		"STRING");
	    }

    |		lv_url_2_2=RULE_URL
		{
			newLeafNode(lv_url_2_2, grammarAccess.getNamespaceDeclarationAccess().getUrlURLTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_2_2, 
        		"URL");
	    }

)

)
)
	otherlv_3=KEYWORD_10
    {
    	newLeafNode(otherlv_3, grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleFontFaceDeclaration
entryRuleFontFaceDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFontFaceDeclarationRule()); }
	 iv_ruleFontFaceDeclaration=ruleFontFaceDeclaration 
	 { $current=$iv_ruleFontFaceDeclaration.current; } 
	 EOF 
;

// Rule FontFaceDeclaration
ruleFontFaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_68
    {
    	newLeafNode(otherlv_0, grammarAccess.getFontFaceDeclarationAccess().getFontFaceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFontFaceDeclarationAccess().getBodyRuleSetBodyParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleRuleSetBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontFaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"RuleSetBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRuleSet
entryRuleRuleSet returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRuleSetRule()); }
	 iv_ruleRuleSet=ruleRuleSet 
	 { $current=$iv_ruleRuleSet.current; } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRuleSetAccess().getSelectorsSelectorParserRuleCall_0_0()); 
	    }
		lv_selectors_0_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleSetRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_0_0, 
        		"Selector");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=KEYWORD_6
    {
    	newLeafNode(otherlv_1, grammarAccess.getRuleSetAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleSetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); 
	    }
		lv_selectors_2_0=ruleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleSetRule());
	        }
       		add(
       			$current, 
       			"selectors",
        		lv_selectors_2_0, 
        		"Selector");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleSetAccess().getBodyRuleSetBodyParserRuleCall_2_0()); 
	    }
		lv_body_3_0=ruleRuleSetBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleSetRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"RuleSetBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRuleSetBody
entryRuleRuleSetBody returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRuleSetBodyRule()); }
	 iv_ruleRuleSetBody=ruleRuleSetBody 
	 { $current=$iv_ruleRuleSetBody.current; } 
	 EOF 
;

// Rule RuleSetBody
ruleRuleSetBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRuleSetBodyAccess().getRuleSetBodyAction_0(),
            $current);
    }
)
	otherlv_1=KEYWORD_16
    {
    	newLeafNode(otherlv_1, grammarAccess.getRuleSetBodyAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRuleSetBodyAccess().getDeclarationsPropertyDeclarationParserRuleCall_2_0_0()); 
	    }
		lv_declarations_2_0=rulePropertyDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleSetBodyRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_2_0, 
        		"PropertyDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_10
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleSetBodyAccess().getSemicolonKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleSetBodyAccess().getDeclarationsPropertyDeclarationParserRuleCall_2_1_1_0()); 
	    }
		lv_declarations_4_0=rulePropertyDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleSetBodyRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_4_0, 
        		"PropertyDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
	otherlv_5=KEYWORD_10
    {
    	newLeafNode(otherlv_5, grammarAccess.getRuleSetBodyAccess().getSemicolonKeyword_2_2());
    }
)?)?
	otherlv_6=KEYWORD_18
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleSetBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyDeclarationRule()); }
	 iv_rulePropertyDeclaration=rulePropertyDeclaration 
	 { $current=$iv_rulePropertyDeclaration.current; } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getKnownPropertyDeclarationParserRuleCall_0()); 
    }
    this_KnownPropertyDeclaration_0=ruleKnownPropertyDeclaration
    {
        $current = $this_KnownPropertyDeclaration_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getUnrecognizedPropertyDeclarationParserRuleCall_1()); 
    }
    this_UnrecognizedPropertyDeclaration_1=ruleUnrecognizedPropertyDeclaration
    {
        $current = $this_UnrecognizedPropertyDeclaration_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleKnownPropertyDeclaration
entryRuleKnownPropertyDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getKnownPropertyDeclarationRule()); }
	 iv_ruleKnownPropertyDeclaration=ruleKnownPropertyDeclaration 
	 { $current=$iv_ruleKnownPropertyDeclaration.current; } 
	 EOF 
;

// Rule KnownPropertyDeclaration
ruleKnownPropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getKnownPropertyDeclarationAccess().getNameKnownPropertiesEnumRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleKnownProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKnownPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"KnownProperties");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=KEYWORD_9
    {
    	newLeafNode(otherlv_1, grammarAccess.getKnownPropertyDeclarationAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKnownPropertyDeclarationAccess().getValuesListsPropertyValuesListsParserRuleCall_2_0()); 
	    }
		lv_valuesLists_2_0=rulePropertyValuesLists		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKnownPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"valuesLists",
        		lv_valuesLists_2_0, 
        		"PropertyValuesLists");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUnrecognizedPropertyDeclaration
entryRuleUnrecognizedPropertyDeclaration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUnrecognizedPropertyDeclarationRule()); }
	 iv_ruleUnrecognizedPropertyDeclaration=ruleUnrecognizedPropertyDeclaration 
	 { $current=$iv_ruleUnrecognizedPropertyDeclaration.current; } 
	 EOF 
;

// Rule UnrecognizedPropertyDeclaration
ruleUnrecognizedPropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getNamePropertyNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=rulePropertyName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"PropertyName");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=KEYWORD_9
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnrecognizedPropertyDeclarationAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getValuesListsPropertyValuesListsParserRuleCall_2_0()); 
	    }
		lv_valuesLists_2_0=rulePropertyValuesLists		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"valuesLists",
        		lv_valuesLists_2_0, 
        		"PropertyValuesLists");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePropertyName
entryRulePropertyName returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPropertyNameRule()); } 
	 iv_rulePropertyName=rulePropertyName 
	 { $current=$iv_rulePropertyName.current.getText(); }  
	 EOF 
;

// Rule PropertyName
rulePropertyName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_IDENT_0=RULE_IDENT    {
		$current.merge(this_IDENT_0);
    }

    { 
    newLeafNode(this_IDENT_0, grammarAccess.getPropertyNameAccess().getIDENTTerminalRuleCall_0()); 
    }

    |
	kw=KEYWORD_51 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameAccess().getEmptyKeyword_1()); 
    }

    |
	kw=KEYWORD_48 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyNameAccess().getAlphaKeyword_2()); 
    }
)
    ;





// Entry rule entryRulePropertyValuesLists
entryRulePropertyValuesLists returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyValuesListsRule()); }
	 iv_rulePropertyValuesLists=rulePropertyValuesLists 
	 { $current=$iv_rulePropertyValuesLists.current; } 
	 EOF 
;

// Rule PropertyValuesLists
rulePropertyValuesLists returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyValuesListsAccess().getListsPropertyValuesListParserRuleCall_0_0()); 
	    }
		lv_lists_0_0=rulePropertyValuesList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyValuesListsRule());
	        }
       		add(
       			$current, 
       			"lists",
        		lv_lists_0_0, 
        		"PropertyValuesList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=KEYWORD_6
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyValuesListsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyValuesListsAccess().getListsPropertyValuesListParserRuleCall_1_1_0()); 
	    }
		lv_lists_2_0=rulePropertyValuesList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyValuesListsRule());
	        }
       		add(
       			$current, 
       			"lists",
        		lv_lists_2_0, 
        		"PropertyValuesList");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePropertyValuesList
entryRulePropertyValuesList returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyValuesListRule()); }
	 iv_rulePropertyValuesList=rulePropertyValuesList 
	 { $current=$iv_rulePropertyValuesList.current; } 
	 EOF 
;

// Rule PropertyValuesList
rulePropertyValuesList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyValuesListAccess().getValuesPropertyValueParserRuleCall_0()); 
	    }
		lv_values_0_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyValuesListRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_0_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); }
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PropertyValue
rulePropertyValue returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyValueAccess().getValueValueLiteralParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleValueLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ValueLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_important_1_0=
	KEYWORD_67
    {
        newLeafNode(lv_important_1_0, grammarAccess.getPropertyValueAccess().getImportantImportantKeyword_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyValueRule());
	        }
       		setWithLastConsumed($current, "important", true, "!important");
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	 iv_ruleSelector=ruleSelector 
	 { $current=$iv_ruleSelector.current; } 
	 EOF 
;

// Rule Selector
ruleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSelectorAccess().getCombinatorExpressionParserRuleCall()); 
    }
    this_CombinatorExpression_0=ruleCombinatorExpression
    {
        $current = $this_CombinatorExpression_0.current;
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleCombinatorExpression
entryRuleCombinatorExpression returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getCombinatorExpressionRule()); }
	 iv_ruleCombinatorExpression=ruleCombinatorExpression 
	 { $current=$iv_ruleCombinatorExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CombinatorExpression
ruleCombinatorExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCombinatorExpressionAccess().getSimpleSelectorSequenceParserRuleCall_0()); 
    }
    this_SimpleSelectorSequence_0=ruleSimpleSelectorSequence
    {
        $current = $this_SimpleSelectorSequence_0.current;
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCombinatorExpressionAccess().getDescendantCombinatorLeftAction_1_0_0(),
            $current);
    }
)(
(
		lv_wsI_2_0=RULE_WS
		{
			newLeafNode(lv_wsI_2_0, grammarAccess.getCombinatorExpressionAccess().getWsIWSTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsI",
        		lv_wsI_2_0, 
        		"WS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleSimpleSelectorSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCombinatorExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"SimpleSelectorSequence");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCombinatorExpressionAccess().getChildCombinatorLeftAction_1_1_0(),
            $current);
    }
)(
(
		lv_wsL_5_0=RULE_WS
		{
			newLeafNode(lv_wsL_5_0, grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsL",
        		lv_wsL_5_0, 
        		"WS");
	    }

)
)?
	otherlv_6=KEYWORD_12
    {
    	newLeafNode(otherlv_6, grammarAccess.getCombinatorExpressionAccess().getGreaterThanSignKeyword_1_1_2());
    }
(
(
		lv_wsR_7_0=RULE_WS
		{
			newLeafNode(lv_wsR_7_0, grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsR",
        		lv_wsR_7_0, 
        		"WS");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_1_4_0()); 
	    }
		lv_right_8_0=ruleSimpleSelectorSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCombinatorExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_8_0, 
        		"SimpleSelectorSequence");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCombinatorExpressionAccess().getAdjacentSiblingCombinatorLeftAction_1_2_0(),
            $current);
    }
)(
(
		lv_wsL_10_0=RULE_WS
		{
			newLeafNode(lv_wsL_10_0, grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsL",
        		lv_wsL_10_0, 
        		"WS");
	    }

)
)?
	otherlv_11=KEYWORD_5
    {
    	newLeafNode(otherlv_11, grammarAccess.getCombinatorExpressionAccess().getPlusSignKeyword_1_2_2());
    }
(
(
		lv_wsR_12_0=RULE_WS
		{
			newLeafNode(lv_wsR_12_0, grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsR",
        		lv_wsR_12_0, 
        		"WS");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_2_4_0()); 
	    }
		lv_right_13_0=ruleSimpleSelectorSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCombinatorExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_13_0, 
        		"SimpleSelectorSequence");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCombinatorExpressionAccess().getGeneralSiblingCombinatorLeftAction_1_3_0(),
            $current);
    }
)(
(
		lv_wsL_15_0=RULE_WS
		{
			newLeafNode(lv_wsL_15_0, grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsL",
        		lv_wsL_15_0, 
        		"WS");
	    }

)
)?
	otherlv_16=KEYWORD_19
    {
    	newLeafNode(otherlv_16, grammarAccess.getCombinatorExpressionAccess().getTildeKeyword_1_3_2());
    }
(
(
		lv_wsR_17_0=RULE_WS
		{
			newLeafNode(lv_wsR_17_0, grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCombinatorExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"wsR",
        		lv_wsR_17_0, 
        		"WS");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_3_4_0()); 
	    }
		lv_right_18_0=ruleSimpleSelectorSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCombinatorExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_18_0, 
        		"SimpleSelectorSequence");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSimpleSelectorSequence
entryRuleSimpleSelectorSequence returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSimpleSelectorSequenceRule()); }
	 iv_ruleSimpleSelectorSequence=ruleSimpleSelectorSequence 
	 { $current=$iv_ruleSimpleSelectorSequence.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleSelectorSequence
ruleSimpleSelectorSequence returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorSequenceAction_0(),
            $current);
    }
)(((
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorSequenceAccess().getHeadTypeSelectorParserRuleCall_1_0_0_0_0()); 
	    }
		lv_head_1_1=ruleTypeSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorSequenceRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_1_1, 
        		"TypeSelector");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorSequenceAccess().getHeadUniversalSelectorParserRuleCall_1_0_0_0_1()); 
	    }
		lv_head_1_2=ruleUniversalSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorSequenceRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_1_2, 
        		"UniversalSelector");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsTailSimpleSelectorParserRuleCall_1_0_1_0()); 
	    }
		lv_simpleSelectors_2_0=ruleTailSimpleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorSequenceRule());
	        }
       		add(
       			$current, 
       			"simpleSelectors",
        		lv_simpleSelectors_2_0, 
        		"TailSimpleSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsTailSimpleSelectorParserRuleCall_1_1_0()); 
	    }
		lv_simpleSelectors_3_0=ruleTailSimpleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleSelectorSequenceRule());
	        }
       		add(
       			$current, 
       			"simpleSelectors",
        		lv_simpleSelectors_3_0, 
        		"TailSimpleSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTailSimpleSelector
entryRuleTailSimpleSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTailSimpleSelectorRule()); }
	 iv_ruleTailSimpleSelector=ruleTailSimpleSelector 
	 { $current=$iv_ruleTailSimpleSelector.current; } 
	 EOF 
;

// Rule TailSimpleSelector
ruleTailSimpleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTailSimpleSelectorAccess().getIDSelectorParserRuleCall_0()); 
    }
    this_IDSelector_0=ruleIDSelector
    {
        $current = $this_IDSelector_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTailSimpleSelectorAccess().getAttributeSelectorParserRuleCall_1()); 
    }
    this_AttributeSelector_1=ruleAttributeSelector
    {
        $current = $this_AttributeSelector_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTailSimpleSelectorAccess().getClassSelectorParserRuleCall_2()); 
    }
    this_ClassSelector_2=ruleClassSelector
    {
        $current = $this_ClassSelector_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTailSimpleSelectorAccess().getPseudoSelectorParserRuleCall_3()); 
    }
    this_PseudoSelector_3=rulePseudoSelector
    {
        $current = $this_PseudoSelector_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTailSimpleSelectorAccess().getNegationSelectorParserRuleCall_4()); 
    }
    this_NegationSelector_4=ruleNegationSelector
    {
        $current = $this_NegationSelector_4.current;
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleTypeSelector
entryRuleTypeSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTypeSelectorRule()); }
	 iv_ruleTypeSelector=ruleTypeSelector 
	 { $current=$iv_ruleTypeSelector.current; } 
	 EOF 
;

// Rule TypeSelector
ruleTypeSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeSelectorAccess().getNamespacePrefixNamespacePrefixParserRuleCall_0_0()); 
	    }
		lv_namespacePrefix_0_0=ruleNamespacePrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeSelectorRule());
	        }
       		set(
       			$current, 
       			"namespacePrefix",
        		lv_namespacePrefix_0_0, 
        		"NamespacePrefix");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_type_1_0=RULE_IDENT
		{
			newLeafNode(lv_type_1_0, grammarAccess.getTypeSelectorAccess().getTypeIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRuleNamespacePrefix
entryRuleNamespacePrefix returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNamespacePrefixRule()); }
	 iv_ruleNamespacePrefix=ruleNamespacePrefix 
	 { $current=$iv_ruleNamespacePrefix.current; } 
	 EOF 
;

// Rule NamespacePrefix
ruleNamespacePrefix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamespacePrefixAccess().getNamespacePrefixAction_0_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespacePrefixRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getNamespacePrefixAccess().getNamespaceNamespaceDeclarationCrossReference_0_0_0_1_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamespacePrefixAccess().getUniversalNamespacePrefixAction_0_0_1_0(),
            $current);
    }
)
	otherlv_3=KEYWORD_4
    {
    	newLeafNode(otherlv_3, grammarAccess.getNamespacePrefixAccess().getAsteriskKeyword_0_0_1_1());
    }
))
	otherlv_4=KEYWORD_17
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamespacePrefixAccess().getVerticalLineKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamespacePrefixAccess().getWithoutNamespacePrefixAction_1_0(),
            $current);
    }
)
	otherlv_6=KEYWORD_17
    {
    	newLeafNode(otherlv_6, grammarAccess.getNamespacePrefixAccess().getVerticalLineKeyword_1_1());
    }
))
;





// Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUniversalSelectorRule()); }
	 iv_ruleUniversalSelector=ruleUniversalSelector 
	 { $current=$iv_ruleUniversalSelector.current; } 
	 EOF 
;

// Rule UniversalSelector
ruleUniversalSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUniversalSelectorAccess().getNamespacePrefixNamespacePrefixParserRuleCall_1_0()); 
	    }
		lv_namespacePrefix_1_0=ruleNamespacePrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUniversalSelectorRule());
	        }
       		set(
       			$current, 
       			"namespacePrefix",
        		lv_namespacePrefix_1_0, 
        		"NamespacePrefix");
	        afterParserOrEnumRuleCall();
	    }

)
)?
	otherlv_2=KEYWORD_4
    {
    	newLeafNode(otherlv_2, grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2());
    }
)
;





// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getAttributeSelectorRule()); }
	 iv_ruleAttributeSelector=ruleAttributeSelector 
	 { $current=$iv_ruleAttributeSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AttributeSelector
ruleAttributeSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_13
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeSelectorAccess().getAttributeAttributeParserRuleCall_1_0()); 
	    }
		lv_attribute_1_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeSelectorRule());
	        }
       		set(
       			$current, 
       			"attribute",
        		lv_attribute_1_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeSelectorAccess().getMatcherAttributeSelectorMatchersEnumRuleCall_2_0_0()); 
	    }
		lv_matcher_2_0=ruleAttributeSelectorMatchers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeSelectorRule());
	        }
       		set(
       			$current, 
       			"matcher",
        		lv_matcher_2_0, 
        		"AttributeSelectorMatchers");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeSelectorAccess().getValueAttributeValueLiteralParserRuleCall_2_1_0()); 
	    }
		lv_value_3_0=ruleAttributeValueLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeSelectorRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"AttributeValueLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_4=KEYWORD_14
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_3());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getNamespacePrefixNamespacePrefixParserRuleCall_0_0()); 
	    }
		lv_namespacePrefix_0_0=ruleNamespacePrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"namespacePrefix",
        		lv_namespacePrefix_0_0, 
        		"NamespacePrefix");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAttributeValueLiteral
entryRuleAttributeValueLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAttributeValueLiteralRule()); }
	 iv_ruleAttributeValueLiteral=ruleAttributeValueLiteral 
	 { $current=$iv_ruleAttributeValueLiteral.current; } 
	 EOF 
;

// Rule AttributeValueLiteral
ruleAttributeValueLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeValueLiteralAccess().getStringAttributeValueLiteralAction_0_0(),
            $current);
    }
)(
(
(
		lv_value_1_1=RULE_IDENT
		{
			newLeafNode(lv_value_1_1, grammarAccess.getAttributeValueLiteralAccess().getValueIDENTTerminalRuleCall_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeValueLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_1, 
        		"IDENT");
	    }

    |		lv_value_1_2=RULE_STRING
		{
			newLeafNode(lv_value_1_2, grammarAccess.getAttributeValueLiteralAccess().getValueSTRINGTerminalRuleCall_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeValueLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_2, 
        		"STRING");
	    }

)

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeValueLiteralAccess().getIntegerAttributeValueLiteralAction_1_0(),
            $current);
    }
)(
(
		lv_value_3_0=RULE_INT
		{
			newLeafNode(lv_value_3_0, grammarAccess.getAttributeValueLiteralAccess().getValueINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeValueLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeValueLiteralAccess().getDecimalAttributeValueLiteralAction_2_0(),
            $current);
    }
)(
(
		lv_value_5_0=RULE_DECIMAL
		{
			newLeafNode(lv_value_5_0, grammarAccess.getAttributeValueLiteralAccess().getValueDECIMALTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeValueLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"DECIMAL");
	    }

)
)))
;





// Entry rule entryRuleIDSelector
entryRuleIDSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIDSelectorRule()); }
	 iv_ruleIDSelector=ruleIDSelector 
	 { $current=$iv_ruleIDSelector.current; } 
	 EOF 
;

// Rule IDSelector
ruleIDSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=RULE_HASH_ID
		{
			newLeafNode(lv_name_0_1, grammarAccess.getIDSelectorAccess().getNameHASH_IDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIDSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"HASH_ID");
	    }

    |		lv_name_0_2=RULE_HEX_COLOR
		{
			newLeafNode(lv_name_0_2, grammarAccess.getIDSelectorAccess().getNameHEX_COLORTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIDSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"HEX_COLOR");
	    }

)

)
)
;





// Entry rule entryRuleClassSelector
entryRuleClassSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getClassSelectorRule()); }
	 iv_ruleClassSelector=ruleClassSelector 
	 { $current=$iv_ruleClassSelector.current; } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_DOT_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getClassSelectorAccess().getNameDOT_IDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"DOT_ID");
	    }

)
)
;





// Entry rule entryRulePseudoSelector
entryRulePseudoSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPseudoSelectorRule()); }
	 iv_rulePseudoSelector=rulePseudoSelector 
	 { $current=$iv_rulePseudoSelector.current; } 
	 EOF 
;

// Rule PseudoSelector
rulePseudoSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPseudoSelectorAccess().getNoArgsPseudoClassSelectorParserRuleCall_0()); 
    }
    this_NoArgsPseudoClassSelector_0=ruleNoArgsPseudoClassSelector
    {
        $current = $this_NoArgsPseudoClassSelector_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPseudoSelectorAccess().getPseudoElementSelectorParserRuleCall_1()); 
    }
    this_PseudoElementSelector_1=rulePseudoElementSelector
    {
        $current = $this_PseudoElementSelector_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPseudoSelectorAccess().getLanguagePseudoClassSelectorParserRuleCall_2()); 
    }
    this_LanguagePseudoClassSelector_2=ruleLanguagePseudoClassSelector
    {
        $current = $this_LanguagePseudoClassSelector_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPseudoSelectorAccess().getFunctionalPseudoClassSelectorParserRuleCall_3()); 
    }
    this_FunctionalPseudoClassSelector_3=ruleFunctionalPseudoClassSelector
    {
        $current = $this_FunctionalPseudoClassSelector_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNoArgsPseudoClassSelector
entryRuleNoArgsPseudoClassSelector returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNoArgsPseudoClassSelectorRule()); }
	 iv_ruleNoArgsPseudoClassSelector=ruleNoArgsPseudoClassSelector 
	 { $current=$iv_ruleNoArgsPseudoClassSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NoArgsPseudoClassSelector
ruleNoArgsPseudoClassSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_9
    {
    	newLeafNode(otherlv_0, grammarAccess.getNoArgsPseudoClassSelectorAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNoArgsPseudoClassSelectorAccess().getPseudoNoArgsPseudosEnumRuleCall_1_0()); 
	    }
		lv_pseudo_1_0=ruleNoArgsPseudos		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNoArgsPseudoClassSelectorRule());
	        }
       		set(
       			$current, 
       			"pseudo",
        		lv_pseudo_1_0, 
        		"NoArgsPseudos");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePseudoElementSelector
entryRulePseudoElementSelector returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getPseudoElementSelectorRule()); }
	 iv_rulePseudoElementSelector=rulePseudoElementSelector 
	 { $current=$iv_rulePseudoElementSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PseudoElementSelector
rulePseudoElementSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_9
    {
    	newLeafNode(otherlv_0, grammarAccess.getPseudoElementSelectorAccess().getColonKeyword_0());
    }
(
(
		lv_doubleSemiColon_1_0=
	KEYWORD_9
    {
        newLeafNode(lv_doubleSemiColon_1_0, grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonColonKeyword_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPseudoElementSelectorRule());
	        }
       		setWithLastConsumed($current, "doubleSemiColon", true, ":");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPseudoElementSelectorAccess().getPseudoPseudoElementsEnumRuleCall_2_0()); 
	    }
		lv_pseudo_2_0=rulePseudoElements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPseudoElementSelectorRule());
	        }
       		set(
       			$current, 
       			"pseudo",
        		lv_pseudo_2_0, 
        		"PseudoElements");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleLanguagePseudoClassSelector
entryRuleLanguagePseudoClassSelector returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getLanguagePseudoClassSelectorRule()); }
	 iv_ruleLanguagePseudoClassSelector=ruleLanguagePseudoClassSelector 
	 { $current=$iv_ruleLanguagePseudoClassSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LanguagePseudoClassSelector
ruleLanguagePseudoClassSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_9
    {
    	newLeafNode(otherlv_0, grammarAccess.getLanguagePseudoClassSelectorAccess().getColonKeyword_0());
    }

	otherlv_1=KEYWORD_40
    {
    	newLeafNode(otherlv_1, grammarAccess.getLanguagePseudoClassSelectorAccess().getLangKeyword_1());
    }

	otherlv_2=KEYWORD_2
    {
    	newLeafNode(otherlv_2, grammarAccess.getLanguagePseudoClassSelectorAccess().getLeftParenthesisKeyword_2());
    }
(
(
		lv_langugageId_3_0=RULE_IDENT
		{
			newLeafNode(lv_langugageId_3_0, grammarAccess.getLanguagePseudoClassSelectorAccess().getLangugageIdIDENTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLanguagePseudoClassSelectorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"langugageId",
        		lv_langugageId_3_0, 
        		"IDENT");
	    }

)
)
	otherlv_4=KEYWORD_3
    {
    	newLeafNode(otherlv_4, grammarAccess.getLanguagePseudoClassSelectorAccess().getRightParenthesisKeyword_4());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFunctionalPseudoClassSelector
entryRuleFunctionalPseudoClassSelector returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getFunctionalPseudoClassSelectorRule()); }
	 iv_ruleFunctionalPseudoClassSelector=ruleFunctionalPseudoClassSelector 
	 { $current=$iv_ruleFunctionalPseudoClassSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionalPseudoClassSelector
ruleFunctionalPseudoClassSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_9
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionalPseudoClassSelectorAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionalPseudoClassSelectorAccess().getPseudoFunctionalPseudoClassesEnumRuleCall_1_0()); 
	    }
		lv_pseudo_1_0=ruleFunctionalPseudoClasses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionalPseudoClassSelectorRule());
	        }
       		set(
       			$current, 
       			"pseudo",
        		lv_pseudo_1_0, 
        		"FunctionalPseudoClasses");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=KEYWORD_2
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionalPseudoClassSelectorAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionalPseudoClassSelectorAccess().getArgumentTypeArgumentParserRuleCall_3_0()); 
	    }
		lv_argument_3_0=ruleTypeArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionalPseudoClassSelectorRule());
	        }
       		set(
       			$current, 
       			"argument",
        		lv_argument_3_0, 
        		"TypeArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_3
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionalPseudoClassSelectorAccess().getRightParenthesisKeyword_4());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeArgument
entryRuleTypeArgument returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTypeArgumentRule()); }
	 iv_ruleTypeArgument=ruleTypeArgument 
	 { $current=$iv_ruleTypeArgument.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeArgument
ruleTypeArgument returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeArgumentAccess().getParityArgumentParserRuleCall_0()); 
    }
    this_ParityArgument_0=ruleParityArgument
    {
        $current = $this_ParityArgument_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeArgumentAccess().getLinearArgumentParserRuleCall_1()); 
    }
    this_LinearArgument_1=ruleLinearArgument
    {
        $current = $this_LinearArgument_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeArgumentAccess().getConstantArgumentParserRuleCall_2()); 
    }
    this_ConstantArgument_2=ruleConstantArgument
    {
        $current = $this_ConstantArgument_2.current;
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleLinearArgument
entryRuleLinearArgument returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getLinearArgumentRule()); }
	 iv_ruleLinearArgument=ruleLinearArgument 
	 { $current=$iv_ruleLinearArgument.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LinearArgument
ruleLinearArgument returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLinearArgumentAccess().getLinearArgumentAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearArgumentAccess().getCoefficientCoefficientParserRuleCall_1_0()); 
	    }
		lv_coefficient_1_0=ruleCoefficient		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearArgumentRule());
	        }
       		set(
       			$current, 
       			"coefficient",
        		lv_coefficient_1_0, 
        		"Coefficient");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
(
		lv_constantSign_2_1=
	KEYWORD_7
    {
        newLeafNode(lv_constantSign_2_1, grammarAccess.getLinearArgumentAccess().getConstantSignHyphenMinusKeyword_2_0_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinearArgumentRule());
	        }
       		setWithLastConsumed($current, "constantSign", lv_constantSign_2_1, null);
	    }

    |		lv_constantSign_2_2=
	KEYWORD_5
    {
        newLeafNode(lv_constantSign_2_2, grammarAccess.getLinearArgumentAccess().getConstantSignPlusSignKeyword_2_0_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinearArgumentRule());
	        }
       		setWithLastConsumed($current, "constantSign", lv_constantSign_2_2, null);
	    }

)

)
)?(
(
		lv_constant_3_0=RULE_INT
		{
			newLeafNode(lv_constant_3_0, grammarAccess.getLinearArgumentAccess().getConstantINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinearArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"constant",
        		lv_constant_3_0, 
        		"INT");
	    }

)
))?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleCoefficient
entryRuleCoefficient returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getCoefficientRule()); }
	 iv_ruleCoefficient=ruleCoefficient 
	 { $current=$iv_ruleCoefficient.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Coefficient
ruleCoefficient returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getCoefficientAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCoefficientRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCoefficientAccess().getCoefficientAction_1_0(),
            $current);
    }
)(
(
		lv_int_2_0=RULE_INT
		{
			newLeafNode(lv_int_2_0, grammarAccess.getCoefficientAccess().getIntINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCoefficientRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int",
        		lv_int_2_0, 
        		"INT");
	    }

)
)?
	otherlv_3=KEYWORD_15
    {
    	newLeafNode(otherlv_3, grammarAccess.getCoefficientAccess().getNKeyword_1_2());
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleConstantArgument
entryRuleConstantArgument returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getConstantArgumentRule()); }
	 iv_ruleConstantArgument=ruleConstantArgument 
	 { $current=$iv_ruleConstantArgument.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConstantArgument
ruleConstantArgument returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
(
		lv_sign_0_1=
	KEYWORD_7
    {
        newLeafNode(lv_sign_0_1, grammarAccess.getConstantArgumentAccess().getSignHyphenMinusKeyword_0_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantArgumentRule());
	        }
       		setWithLastConsumed($current, "sign", lv_sign_0_1, null);
	    }

    |		lv_sign_0_2=
	KEYWORD_5
    {
        newLeafNode(lv_sign_0_2, grammarAccess.getConstantArgumentAccess().getSignPlusSignKeyword_0_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantArgumentRule());
	        }
       		setWithLastConsumed($current, "sign", lv_sign_0_2, null);
	    }

)

)
)?(
(
		lv_int_1_0=RULE_INT
		{
			newLeafNode(lv_int_1_0, grammarAccess.getConstantArgumentAccess().getIntINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int",
        		lv_int_1_0, 
        		"INT");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleParityArgument
entryRuleParityArgument returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getParityArgumentRule()); }
	 iv_ruleParityArgument=ruleParityArgument 
	 { $current=$iv_ruleParityArgument.current; } 
	 EOF 
;

// Rule ParityArgument
ruleParityArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParityArgumentAccess().getParityParitiesEnumRuleCall_0()); 
	    }
		lv_parity_0_0=ruleParities		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParityArgumentRule());
	        }
       		set(
       			$current, 
       			"parity",
        		lv_parity_0_0, 
        		"Parities");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNegationSelector
entryRuleNegationSelector returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNegationSelectorRule()); }
	 iv_ruleNegationSelector=ruleNegationSelector 
	 { $current=$iv_ruleNegationSelector.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NegationSelector
ruleNegationSelector returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_9
    {
    	newLeafNode(otherlv_0, grammarAccess.getNegationSelectorAccess().getColonKeyword_0());
    }

	otherlv_1=KEYWORD_42
    {
    	newLeafNode(otherlv_1, grammarAccess.getNegationSelectorAccess().getNotKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNegationSelectorAccess().getSimpleSelectorNegationSimpleSelectorParserRuleCall_2_0()); 
	    }
		lv_simpleSelector_2_0=ruleNegationSimpleSelector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNegationSelectorRule());
	        }
       		set(
       			$current, 
       			"simpleSelector",
        		lv_simpleSelector_2_0, 
        		"NegationSimpleSelector");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=KEYWORD_3
    {
    	newLeafNode(otherlv_3, grammarAccess.getNegationSelectorAccess().getRightParenthesisKeyword_3());
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNegationSimpleSelector
entryRuleNegationSimpleSelector returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNegationSimpleSelectorRule()); }
	 iv_ruleNegationSimpleSelector=ruleNegationSimpleSelector 
	 { $current=$iv_ruleNegationSimpleSelector.current; } 
	 EOF 
;

// Rule NegationSimpleSelector
ruleNegationSimpleSelector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNegationSimpleSelectorAccess().getTypeSelectorParserRuleCall_0()); 
    }
    this_TypeSelector_0=ruleTypeSelector
    {
        $current = $this_TypeSelector_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNegationSimpleSelectorAccess().getUniversalSelectorParserRuleCall_1()); 
    }
    this_UniversalSelector_1=ruleUniversalSelector
    {
        $current = $this_UniversalSelector_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNegationSimpleSelectorAccess().getAttributeSelectorParserRuleCall_2()); 
    }
    this_AttributeSelector_2=ruleAttributeSelector
    {
        $current = $this_AttributeSelector_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNegationSimpleSelectorAccess().getIDSelectorParserRuleCall_3()); 
    }
    this_IDSelector_3=ruleIDSelector
    {
        $current = $this_IDSelector_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNegationSimpleSelectorAccess().getClassSelectorParserRuleCall_4()); 
    }
    this_ClassSelector_4=ruleClassSelector
    {
        $current = $this_ClassSelector_4.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNegationSimpleSelectorAccess().getPseudoSelectorParserRuleCall_5()); 
    }
    this_PseudoSelector_5=rulePseudoSelector
    {
        $current = $this_PseudoSelector_5.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleValueLiteral
entryRuleValueLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getValueLiteralRule()); }
	 iv_ruleValueLiteral=ruleValueLiteral 
	 { $current=$iv_ruleValueLiteral.current; } 
	 EOF 
;

// Rule ValueLiteral
ruleValueLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueLiteralAccess().getSizeLiteralParserRuleCall_0()); 
    }
    this_SizeLiteral_0=ruleSizeLiteral
    {
        $current = $this_SizeLiteral_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_1()); 
    }
    this_StringLiteral_1=ruleStringLiteral
    {
        $current = $this_StringLiteral_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueLiteralAccess().getColorLiteralParserRuleCall_2()); 
    }
    this_ColorLiteral_2=ruleColorLiteral
    {
        $current = $this_ColorLiteral_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueLiteralAccess().getURLLiteralParserRuleCall_3()); 
    }
    this_URLLiteral_3=ruleURLLiteral
    {
        $current = $this_URLLiteral_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueLiteralAccess().getFunctionCallLiteralParserRuleCall_4()); 
    }
    this_FunctionCallLiteral_4=ruleFunctionCallLiteral
    {
        $current = $this_FunctionCallLiteral_4.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	 iv_ruleNumberLiteral=ruleNumberLiteral 
	 { $current=$iv_ruleNumberLiteral.current; } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberLiteralAccess().getIntegerLiteralAction_0_0(),
            $current);
    }
)(
(
		lv_int_1_0=RULE_INT
		{
			newLeafNode(lv_int_1_0, grammarAccess.getNumberLiteralAccess().getIntINTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int",
        		lv_int_1_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberLiteralAccess().getDecimalLiteralAction_1_0(),
            $current);
    }
)(
(
		lv_decimal_3_0=RULE_DECIMAL
		{
			newLeafNode(lv_decimal_3_0, grammarAccess.getNumberLiteralAccess().getDecimalDECIMALTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"decimal",
        		lv_decimal_3_0, 
        		"DECIMAL");
	    }

)
)))
;





// Entry rule entryRuleSizeLiteral
entryRuleSizeLiteral returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getSizeLiteralRule()); }
	 iv_ruleSizeLiteral=ruleSizeLiteral 
	 { $current=$iv_ruleSizeLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SizeLiteral
ruleSizeLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSizeLiteralAccess().getQuantifiedSizeLiteralAction_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeLiteralAccess().getNumberNumberLiteralParserRuleCall_0_0_1_0()); 
	    }
		lv_number_1_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeLiteralRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_1_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeLiteralAccess().getDimensionDimensionsEnumRuleCall_0_0_2_0()); 
	    }
		lv_dimension_2_0=ruleDimensions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeLiteralRule());
	        }
       		set(
       			$current, 
       			"dimension",
        		lv_dimension_2_0, 
        		"Dimensions");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSizeLiteralAccess().getQualifiedSizeLiteralAction_0_1_0(),
            $current);
    }
)(
(
		lv_bareword_4_0=RULE_IDENT
		{
			newLeafNode(lv_bareword_4_0, grammarAccess.getSizeLiteralAccess().getBarewordIDENTTerminalRuleCall_0_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bareword",
        		lv_bareword_4_0, 
        		"IDENT");
	    }

)
)))(
	otherlv_5=KEYWORD_8
    {
    	newLeafNode(otherlv_5, grammarAccess.getSizeLiteralAccess().getSolidusKeyword_1_0());
    }
(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSizeLiteralAccess().getFontHeightLiteralFontHeightAction_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeLiteralAccess().getLineHeightNumberLiteralParserRuleCall_1_2_0()); 
	    }
		lv_lineHeight_7_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeLiteralRule());
	        }
       		set(
       			$current, 
       			"lineHeight",
        		lv_lineHeight_7_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeLiteralAccess().getLineHeightDimensionDimensionsEnumRuleCall_1_3_0()); 
	    }
		lv_lineHeightDimension_8_0=ruleDimensions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeLiteralRule());
	        }
       		set(
       			$current, 
       			"lineHeightDimension",
        		lv_lineHeightDimension_8_0, 
        		"Dimensions");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleColorLiteral
entryRuleColorLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getColorLiteralRule()); }
	 iv_ruleColorLiteral=ruleColorLiteral 
	 { $current=$iv_ruleColorLiteral.current; } 
	 EOF 
;

// Rule ColorLiteral
ruleColorLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColorLiteralAccess().getRGBColorAction_0_0(),
            $current);
    }
)(
(
		lv_rgb_1_0=RULE_HEX_COLOR
		{
			newLeafNode(lv_rgb_1_0, grammarAccess.getColorLiteralAccess().getRgbHEX_COLORTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rgb",
        		lv_rgb_1_0, 
        		"HEX_COLOR");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColorLiteralAccess().getNamedColorAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getColorLiteralAccess().getColorColorNamesEnumRuleCall_1_1_0()); 
	    }
		lv_color_3_0=ruleColorNames		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorLiteralRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_3_0, 
        		"ColorNames");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getColorLiteralAccess().getComponentColorLiteralParserRuleCall_2()); 
    }
    this_ComponentColorLiteral_4=ruleComponentColorLiteral
    {
        $current = $this_ComponentColorLiteral_4.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleComponentColorLiteral
entryRuleComponentColorLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComponentColorLiteralRule()); }
	 iv_ruleComponentColorLiteral=ruleComponentColorLiteral 
	 { $current=$iv_ruleComponentColorLiteral.current; } 
	 EOF 
;

// Rule ComponentColorLiteral
ruleComponentColorLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComponentColorLiteralAccess().getComponentRGBColorAction_0_0(),
            $current);
    }
)
	otherlv_1=KEYWORD_37
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentColorLiteralAccess().getRgbKeyword_0_1());
    }

	otherlv_2=KEYWORD_2
    {
    	newLeafNode(otherlv_2, grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getRedColorComponentLiteralParserRuleCall_0_3_0()); 
	    }
		lv_red_3_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"red",
        		lv_red_3_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_6
    {
    	newLeafNode(otherlv_4, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getGreenColorComponentLiteralParserRuleCall_0_5_0()); 
	    }
		lv_green_5_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"green",
        		lv_green_5_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=KEYWORD_6
    {
    	newLeafNode(otherlv_6, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_0_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getBlueColorComponentLiteralParserRuleCall_0_7_0()); 
	    }
		lv_blue_7_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"blue",
        		lv_blue_7_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=KEYWORD_3
    {
    	newLeafNode(otherlv_8, grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_0_8());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComponentColorLiteralAccess().getComponentRGBAlphaColorAction_1_0(),
            $current);
    }
)
	otherlv_10=KEYWORD_44
    {
    	newLeafNode(otherlv_10, grammarAccess.getComponentColorLiteralAccess().getRgbaKeyword_1_1());
    }

	otherlv_11=KEYWORD_2
    {
    	newLeafNode(otherlv_11, grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getRedColorComponentLiteralParserRuleCall_1_3_0()); 
	    }
		lv_red_12_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"red",
        		lv_red_12_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_13=KEYWORD_6
    {
    	newLeafNode(otherlv_13, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getGreenColorComponentLiteralParserRuleCall_1_5_0()); 
	    }
		lv_green_14_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"green",
        		lv_green_14_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_15=KEYWORD_6
    {
    	newLeafNode(otherlv_15, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getBlueColorComponentLiteralParserRuleCall_1_7_0()); 
	    }
		lv_blue_16_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"blue",
        		lv_blue_16_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_17=KEYWORD_6
    {
    	newLeafNode(otherlv_17, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getOpacityColorComponentLiteralParserRuleCall_1_9_0()); 
	    }
		lv_opacity_18_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"opacity",
        		lv_opacity_18_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_19=KEYWORD_3
    {
    	newLeafNode(otherlv_19, grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_1_10());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComponentColorLiteralAccess().getComponentHSLColorAction_2_0(),
            $current);
    }
)
	otherlv_21=KEYWORD_34
    {
    	newLeafNode(otherlv_21, grammarAccess.getComponentColorLiteralAccess().getHslKeyword_2_1());
    }

	otherlv_22=KEYWORD_2
    {
    	newLeafNode(otherlv_22, grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getHueColorComponentLiteralParserRuleCall_2_3_0()); 
	    }
		lv_hue_23_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"hue",
        		lv_hue_23_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_24=KEYWORD_6
    {
    	newLeafNode(otherlv_24, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_2_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getSaturationColorComponentLiteralParserRuleCall_2_5_0()); 
	    }
		lv_saturation_25_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"saturation",
        		lv_saturation_25_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_26=KEYWORD_6
    {
    	newLeafNode(otherlv_26, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_2_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getLightnessColorComponentLiteralParserRuleCall_2_7_0()); 
	    }
		lv_lightness_27_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"lightness",
        		lv_lightness_27_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_28=KEYWORD_3
    {
    	newLeafNode(otherlv_28, grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_2_8());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComponentColorLiteralAccess().getComponentHSLAlphaColorAction_3_0(),
            $current);
    }
)
	otherlv_30=KEYWORD_39
    {
    	newLeafNode(otherlv_30, grammarAccess.getComponentColorLiteralAccess().getHslaKeyword_3_1());
    }

	otherlv_31=KEYWORD_2
    {
    	newLeafNode(otherlv_31, grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getHueColorComponentLiteralParserRuleCall_3_3_0()); 
	    }
		lv_hue_32_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"hue",
        		lv_hue_32_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_33=KEYWORD_6
    {
    	newLeafNode(otherlv_33, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getSaturationColorComponentLiteralParserRuleCall_3_5_0()); 
	    }
		lv_saturation_34_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"saturation",
        		lv_saturation_34_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_35=KEYWORD_6
    {
    	newLeafNode(otherlv_35, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getLightnessColorComponentLiteralParserRuleCall_3_7_0()); 
	    }
		lv_lightness_36_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"lightness",
        		lv_lightness_36_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_37=KEYWORD_6
    {
    	newLeafNode(otherlv_37, grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentColorLiteralAccess().getOpacityColorComponentLiteralParserRuleCall_3_9_0()); 
	    }
		lv_opacity_38_0=ruleColorComponentLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentColorLiteralRule());
	        }
       		set(
       			$current, 
       			"opacity",
        		lv_opacity_38_0, 
        		"ColorComponentLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_39=KEYWORD_3
    {
    	newLeafNode(otherlv_39, grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_3_10());
    }
))
;





// Entry rule entryRuleColorComponentLiteral
entryRuleColorComponentLiteral returns [EObject current=null]
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getColorComponentLiteralRule()); }
	 iv_ruleColorComponentLiteral=ruleColorComponentLiteral 
	 { $current=$iv_ruleColorComponentLiteral.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorComponentLiteral
ruleColorComponentLiteral returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getColorComponentLiteralAccess().getNumberNumberLiteralParserRuleCall_0_0()); 
	    }
		lv_number_0_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorComponentLiteralRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_0_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_percentage_1_0=
	KEYWORD_1
    {
        newLeafNode(lv_percentage_1_0, grammarAccess.getColorComponentLiteralAccess().getPercentagePercentSignKeyword_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColorComponentLiteralRule());
	        }
       		setWithLastConsumed($current, "percentage", true, "\%");
	    }

)
)?)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleURLLiteral
entryRuleURLLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getURLLiteralRule()); }
	 iv_ruleURLLiteral=ruleURLLiteral 
	 { $current=$iv_ruleURLLiteral.current; } 
	 EOF 
;

// Rule URLLiteral
ruleURLLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_URL
		{
			newLeafNode(lv_value_0_0, grammarAccess.getURLLiteralAccess().getValueURLTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"URL");
	    }

)
)
;







// Entry rule entryRuleFunctionCallLiteral
entryRuleFunctionCallLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFunctionCallLiteralRule()); }
	 iv_ruleFunctionCallLiteral=ruleFunctionCallLiteral 
	 { $current=$iv_ruleFunctionCallLiteral.current; } 
	 EOF 
;

// Rule FunctionCallLiteral
ruleFunctionCallLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_function_0_0=RULE_IDENT
		{
			newLeafNode(lv_function_0_0, grammarAccess.getFunctionCallLiteralAccess().getFunctionIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionCallLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"function",
        		lv_function_0_0, 
        		"IDENT");
	    }

)
)
	otherlv_1=KEYWORD_2
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionCallLiteralAccess().getLeftParenthesisKeyword_0_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallLiteralAccess().getArgumentsValueLiteralParserRuleCall_0_2_0_0()); 
	    }
		lv_arguments_2_0=ruleValueLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallLiteralRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"ValueLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_6
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionCallLiteralAccess().getCommaKeyword_0_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallLiteralAccess().getArgumentsValueLiteralParserRuleCall_0_2_1_1_0()); 
	    }
		lv_arguments_4_0=ruleValueLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallLiteralRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"ValueLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_5=KEYWORD_3
    {
    	newLeafNode(otherlv_5, grammarAccess.getFunctionCallLiteralAccess().getRightParenthesisKeyword_0_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionCallLiteralAccess().getAlphaLiteralAction_1_0(),
            $current);
    }
)
	otherlv_7=KEYWORD_48
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionCallLiteralAccess().getAlphaKeyword_1_1());
    }

	otherlv_8=KEYWORD_2
    {
    	newLeafNode(otherlv_8, grammarAccess.getFunctionCallLiteralAccess().getLeftParenthesisKeyword_1_2());
    }

	otherlv_9=KEYWORD_62
    {
    	newLeafNode(otherlv_9, grammarAccess.getFunctionCallLiteralAccess().getOpacityKeyword_1_3());
    }

	otherlv_10=KEYWORD_11
    {
    	newLeafNode(otherlv_10, grammarAccess.getFunctionCallLiteralAccess().getEqualsSignKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallLiteralAccess().getOpacityNumberLiteralParserRuleCall_1_5_0()); 
	    }
		lv_opacity_11_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallLiteralRule());
	        }
       		set(
       			$current, 
       			"opacity",
        		lv_opacity_11_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_12=KEYWORD_3
    {
    	newLeafNode(otherlv_12, grammarAccess.getFunctionCallLiteralAccess().getRightParenthesisKeyword_1_6());
    }
))
;





// Rule KnownProperties
ruleKnownProperties returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_50
    {
        $current = grammarAccess.getKnownPropertiesAccess().getColorEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getKnownPropertiesAccess().getColorEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_70
    {
        $current = grammarAccess.getKnownPropertiesAccess().getBorder_topEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getKnownPropertiesAccess().getBorder_topEnumLiteralDeclaration_1()); 
    }
));



// Rule AttributeSelectorMatchers
ruleAttributeSelectorMatchers returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_22
    {
        $current = grammarAccess.getAttributeSelectorMatchersAccess().getPrefixEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttributeSelectorMatchersAccess().getPrefixEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_20
    {
        $current = grammarAccess.getAttributeSelectorMatchersAccess().getSuffixEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAttributeSelectorMatchersAccess().getSuffixEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_21
    {
        $current = grammarAccess.getAttributeSelectorMatchersAccess().getSubstringEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAttributeSelectorMatchersAccess().getSubstringEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_11
    {
        $current = grammarAccess.getAttributeSelectorMatchersAccess().getExactEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getAttributeSelectorMatchersAccess().getExactEnumLiteralDeclaration_3()); 
    }
)
    |(    enumLiteral_4=KEYWORD_32
    {
        $current = grammarAccess.getAttributeSelectorMatchersAccess().getIncludesEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getAttributeSelectorMatchersAccess().getIncludesEnumLiteralDeclaration_4()); 
    }
)
    |(    enumLiteral_5=KEYWORD_31
    {
        $current = grammarAccess.getAttributeSelectorMatchersAccess().getLanguageEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getAttributeSelectorMatchersAccess().getLanguageEnumLiteralDeclaration_5()); 
    }
));



// Rule NoArgsPseudos
ruleNoArgsPseudos returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_41
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getLinkEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getNoArgsPseudosAccess().getLinkEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_63
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getVisitedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getNoArgsPseudosAccess().getVisitedEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_53
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getHoverEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getNoArgsPseudosAccess().getHoverEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_56
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getActiveEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getNoArgsPseudosAccess().getActiveEnumLiteralDeclaration_3()); 
    }
)
    |(    enumLiteral_4=KEYWORD_52
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getFocusEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getNoArgsPseudosAccess().getFocusEnumLiteralDeclaration_4()); 
    }
)
    |(    enumLiteral_5=KEYWORD_58
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getTargetEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getNoArgsPseudosAccess().getTargetEnumLiteralDeclaration_5()); 
    }
)
    |(    enumLiteral_6=KEYWORD_61
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getEnabledEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getNoArgsPseudosAccess().getEnabledEnumLiteralDeclaration_6()); 
    }
)
    |(    enumLiteral_7=KEYWORD_65
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getDisabledEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getNoArgsPseudosAccess().getDisabledEnumLiteralDeclaration_7()); 
    }
)
    |(    enumLiteral_8=KEYWORD_60
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getCheckedEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getNoArgsPseudosAccess().getCheckedEnumLiteralDeclaration_8()); 
    }
)
    |(    enumLiteral_9=KEYWORD_80
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getIndeterminateEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getNoArgsPseudosAccess().getIndeterminateEnumLiteralDeclaration_9()); 
    }
)
    |(    enumLiteral_10=KEYWORD_45
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getRootEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getNoArgsPseudosAccess().getRootEnumLiteralDeclaration_10()); 
    }
)
    |(    enumLiteral_11=KEYWORD_74
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getFirstChildEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getNoArgsPseudosAccess().getFirstChildEnumLiteralDeclaration_11()); 
    }
)
    |(    enumLiteral_12=KEYWORD_72
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getLastChildEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getNoArgsPseudosAccess().getLastChildEnumLiteralDeclaration_12()); 
    }
)
    |(    enumLiteral_13=KEYWORD_73
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getOnlyChildEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getNoArgsPseudosAccess().getOnlyChildEnumLiteralDeclaration_13()); 
    }
)
    |(    enumLiteral_14=KEYWORD_51
    {
        $current = grammarAccess.getNoArgsPseudosAccess().getEmptyEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getNoArgsPseudosAccess().getEmptyEnumLiteralDeclaration_14()); 
    }
));



// Rule PseudoElements
rulePseudoElements returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_76
    {
        $current = grammarAccess.getPseudoElementsAccess().getFirstLetterEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPseudoElementsAccess().getFirstLetterEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_71
    {
        $current = grammarAccess.getPseudoElementsAccess().getFirstLineEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPseudoElementsAccess().getFirstLineEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_57
    {
        $current = grammarAccess.getPseudoElementsAccess().getBeforeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getPseudoElementsAccess().getBeforeEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_47
    {
        $current = grammarAccess.getPseudoElementsAccess().getAfterEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getPseudoElementsAccess().getAfterEnumLiteralDeclaration_3()); 
    }
));



// Rule FunctionalPseudoClasses
ruleFunctionalPseudoClasses returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_66
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getNthChildEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFunctionalPseudoClassesAccess().getNthChildEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_81
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getNthLastChildEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFunctionalPseudoClassesAccess().getNthLastChildEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_75
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getNthOfTypeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFunctionalPseudoClassesAccess().getNthOfTypeEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_82
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getNthLastOfTypeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getFunctionalPseudoClassesAccess().getNthLastOfTypeEnumLiteralDeclaration_3()); 
    }
)
    |(    enumLiteral_4=KEYWORD_79
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getFirstOfTypeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getFunctionalPseudoClassesAccess().getFirstOfTypeEnumLiteralDeclaration_4()); 
    }
)
    |(    enumLiteral_5=KEYWORD_77
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getLastOfTypeEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getFunctionalPseudoClassesAccess().getLastOfTypeEnumLiteralDeclaration_5()); 
    }
)
    |(    enumLiteral_6=KEYWORD_78
    {
        $current = grammarAccess.getFunctionalPseudoClassesAccess().getOnlyOfTypeEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getFunctionalPseudoClassesAccess().getOnlyOfTypeEnumLiteralDeclaration_6()); 
    }
));



// Rule Parities
ruleParities returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_36
    {
        $current = grammarAccess.getParitiesAccess().getOddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getParitiesAccess().getOddEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_38
    {
        $current = grammarAccess.getParitiesAccess().getEvenEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getParitiesAccess().getEvenEnumLiteralDeclaration_1()); 
    }
));



// Rule Dimensions
ruleDimensions returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_26
    {
        $current = grammarAccess.getDimensionsAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDimensionsAccess().getInEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_23
    {
        $current = grammarAccess.getDimensionsAccess().getCmEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDimensionsAccess().getCmEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=KEYWORD_27
    {
        $current = grammarAccess.getDimensionsAccess().getMmEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDimensionsAccess().getMmEnumLiteralDeclaration_2()); 
    }
)
    |(    enumLiteral_3=KEYWORD_29
    {
        $current = grammarAccess.getDimensionsAccess().getPtEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDimensionsAccess().getPtEnumLiteralDeclaration_3()); 
    }
)
    |(    enumLiteral_4=KEYWORD_28
    {
        $current = grammarAccess.getDimensionsAccess().getPcEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDimensionsAccess().getPcEnumLiteralDeclaration_4()); 
    }
)
    |(    enumLiteral_5=KEYWORD_24
    {
        $current = grammarAccess.getDimensionsAccess().getEmEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDimensionsAccess().getEmEnumLiteralDeclaration_5()); 
    }
)
    |(    enumLiteral_6=KEYWORD_25
    {
        $current = grammarAccess.getDimensionsAccess().getExEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getDimensionsAccess().getExEnumLiteralDeclaration_6()); 
    }
)
    |(    enumLiteral_7=KEYWORD_30
    {
        $current = grammarAccess.getDimensionsAccess().getPxEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getDimensionsAccess().getPxEnumLiteralDeclaration_7()); 
    }
)
    |(    enumLiteral_8=KEYWORD_1
    {
        $current = grammarAccess.getDimensionsAccess().getPercEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getDimensionsAccess().getPercEnumLiteralDeclaration_8()); 
    }
));



// Rule ColorNames
ruleColorNames returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=KEYWORD_49
    {
        $current = grammarAccess.getColorNamesAccess().getBlackEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getColorNamesAccess().getBlackEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=KEYWORD_54
    {
        $current = grammarAccess.getColorNamesAccess().getWhiteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getColorNamesAccess().getWhiteEnumLiteralDeclaration_1()); 
    }
));



