/*
* generated by Xtext
*/
parser grammar InternalCSSParser;

options {
	tokenVocab=InternalCSSLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package nl.dslmeinte.xtext.css.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import nl.dslmeinte.xtext.css.services.CSSGrammarAccess;

}

@members {
 
 	private CSSGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("KEYWORD_1", "'\%'");
		tokenNameToValue.put("KEYWORD_2", "'('");
		tokenNameToValue.put("KEYWORD_3", "')'");
		tokenNameToValue.put("KEYWORD_4", "'*'");
		tokenNameToValue.put("KEYWORD_5", "'+'");
		tokenNameToValue.put("KEYWORD_6", "','");
		tokenNameToValue.put("KEYWORD_7", "'-'");
		tokenNameToValue.put("KEYWORD_8", "'/'");
		tokenNameToValue.put("KEYWORD_9", "':'");
		tokenNameToValue.put("KEYWORD_10", "';'");
		tokenNameToValue.put("KEYWORD_11", "'='");
		tokenNameToValue.put("KEYWORD_12", "'>'");
		tokenNameToValue.put("KEYWORD_13", "'['");
		tokenNameToValue.put("KEYWORD_14", "']'");
		tokenNameToValue.put("KEYWORD_15", "'n'");
		tokenNameToValue.put("KEYWORD_16", "'{'");
		tokenNameToValue.put("KEYWORD_17", "'|'");
		tokenNameToValue.put("KEYWORD_18", "'}'");
		tokenNameToValue.put("KEYWORD_19", "'~'");
		tokenNameToValue.put("KEYWORD_20", "'\u0024='");
		tokenNameToValue.put("KEYWORD_21", "'*='");
		tokenNameToValue.put("KEYWORD_22", "'^='");
		tokenNameToValue.put("KEYWORD_23", "'cm'");
		tokenNameToValue.put("KEYWORD_24", "'em'");
		tokenNameToValue.put("KEYWORD_25", "'ex'");
		tokenNameToValue.put("KEYWORD_26", "'in'");
		tokenNameToValue.put("KEYWORD_27", "'mm'");
		tokenNameToValue.put("KEYWORD_28", "'pc'");
		tokenNameToValue.put("KEYWORD_29", "'pt'");
		tokenNameToValue.put("KEYWORD_30", "'px'");
		tokenNameToValue.put("KEYWORD_31", "'|='");
		tokenNameToValue.put("KEYWORD_32", "'~='");
		tokenNameToValue.put("KEYWORD_33", "'and'");
		tokenNameToValue.put("KEYWORD_34", "'hsl'");
		tokenNameToValue.put("KEYWORD_35", "'not'");
		tokenNameToValue.put("KEYWORD_36", "'odd'");
		tokenNameToValue.put("KEYWORD_37", "'rgb'");
		tokenNameToValue.put("KEYWORD_38", "'even'");
		tokenNameToValue.put("KEYWORD_39", "'hsla'");
		tokenNameToValue.put("KEYWORD_40", "'lang'");
		tokenNameToValue.put("KEYWORD_41", "'link'");
		tokenNameToValue.put("KEYWORD_42", "'not('");
		tokenNameToValue.put("KEYWORD_43", "'only'");
		tokenNameToValue.put("KEYWORD_44", "'rgba'");
		tokenNameToValue.put("KEYWORD_45", "'root'");
		tokenNameToValue.put("KEYWORD_46", "'@page'");
		tokenNameToValue.put("KEYWORD_47", "'after'");
		tokenNameToValue.put("KEYWORD_48", "'alpha'");
		tokenNameToValue.put("KEYWORD_49", "'black'");
		tokenNameToValue.put("KEYWORD_50", "'color'");
		tokenNameToValue.put("KEYWORD_51", "'empty'");
		tokenNameToValue.put("KEYWORD_52", "'focus'");
		tokenNameToValue.put("KEYWORD_53", "'hover'");
		tokenNameToValue.put("KEYWORD_54", "'white'");
		tokenNameToValue.put("KEYWORD_55", "'@media'");
		tokenNameToValue.put("KEYWORD_56", "'active'");
		tokenNameToValue.put("KEYWORD_57", "'before'");
		tokenNameToValue.put("KEYWORD_58", "'target'");
		tokenNameToValue.put("KEYWORD_59", "'@import'");
		tokenNameToValue.put("KEYWORD_60", "'checked'");
		tokenNameToValue.put("KEYWORD_61", "'enabled'");
		tokenNameToValue.put("KEYWORD_62", "'opacity'");
		tokenNameToValue.put("KEYWORD_63", "'visited'");
		tokenNameToValue.put("KEYWORD_64", "'@charset'");
		tokenNameToValue.put("KEYWORD_65", "'disabled'");
		tokenNameToValue.put("KEYWORD_66", "'nth-child'");
		tokenNameToValue.put("KEYWORD_67", "'!important'");
		tokenNameToValue.put("KEYWORD_68", "'@font-face'");
		tokenNameToValue.put("KEYWORD_69", "'@namespace'");
		tokenNameToValue.put("KEYWORD_70", "'border-top'");
		tokenNameToValue.put("KEYWORD_71", "'first-line'");
		tokenNameToValue.put("KEYWORD_72", "'last-child'");
		tokenNameToValue.put("KEYWORD_73", "'only-child'");
		tokenNameToValue.put("KEYWORD_74", "'first-child'");
		tokenNameToValue.put("KEYWORD_75", "'nth-of-type'");
		tokenNameToValue.put("KEYWORD_76", "'first-letter'");
		tokenNameToValue.put("KEYWORD_77", "'last-of-type'");
		tokenNameToValue.put("KEYWORD_78", "'only-of-type'");
		tokenNameToValue.put("KEYWORD_79", "'first-of-type'");
		tokenNameToValue.put("KEYWORD_80", "'indeterminate'");
		tokenNameToValue.put("KEYWORD_81", "'nth-last-child'");
		tokenNameToValue.put("KEYWORD_82", "'nth-last-if-type'");
 	}
 	
    public void setGrammarAccess(CSSGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleStylesheet
entryRuleStylesheet 
:
{ before(grammarAccess.getStylesheetRule()); }
	 ruleStylesheet
{ after(grammarAccess.getStylesheetRule()); } 
	 EOF 
;

// Rule Stylesheet
ruleStylesheet 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStylesheetAccess().getGroup()); }
(rule__Stylesheet__Group__0)
{ after(grammarAccess.getStylesheetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSTopLevelStatement
entryRuleCSSTopLevelStatement 
:
{ before(grammarAccess.getCSSTopLevelStatementRule()); }
	 ruleCSSTopLevelStatement
{ after(grammarAccess.getCSSTopLevelStatementRule()); } 
	 EOF 
;

// Rule CSSTopLevelStatement
ruleCSSTopLevelStatement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCSSTopLevelStatementAccess().getAlternatives()); }
(rule__CSSTopLevelStatement__Alternatives)
{ after(grammarAccess.getCSSTopLevelStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCSSOtherTopLevelDeclaration
entryRuleCSSOtherTopLevelDeclaration 
:
{ before(grammarAccess.getCSSOtherTopLevelDeclarationRule()); }
	 ruleCSSOtherTopLevelDeclaration
{ after(grammarAccess.getCSSOtherTopLevelDeclarationRule()); } 
	 EOF 
;

// Rule CSSOtherTopLevelDeclaration
ruleCSSOtherTopLevelDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getAlternatives()); }
(rule__CSSOtherTopLevelDeclaration__Alternatives)
{ after(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration 
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
(rule__ImportDeclaration__Group__0)
{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMediaDeclaration
entryRuleMediaDeclaration 
:
{ before(grammarAccess.getMediaDeclarationRule()); }
	 ruleMediaDeclaration
{ after(grammarAccess.getMediaDeclarationRule()); } 
	 EOF 
;

// Rule MediaDeclaration
ruleMediaDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMediaDeclarationAccess().getGroup()); }
(rule__MediaDeclaration__Group__0)
{ after(grammarAccess.getMediaDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMediaDeclarationMembers
entryRuleMediaDeclarationMembers 
:
{ before(grammarAccess.getMediaDeclarationMembersRule()); }
	 ruleMediaDeclarationMembers
{ after(grammarAccess.getMediaDeclarationMembersRule()); } 
	 EOF 
;

// Rule MediaDeclarationMembers
ruleMediaDeclarationMembers 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMediaDeclarationMembersAccess().getAlternatives()); }
(rule__MediaDeclarationMembers__Alternatives)
{ after(grammarAccess.getMediaDeclarationMembersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMediaQuery
entryRuleMediaQuery 
:
{ before(grammarAccess.getMediaQueryRule()); }
	 ruleMediaQuery
{ after(grammarAccess.getMediaQueryRule()); } 
	 EOF 
;

// Rule MediaQuery
ruleMediaQuery 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMediaQueryAccess().getAlternatives()); }
(rule__MediaQuery__Alternatives)
{ after(grammarAccess.getMediaQueryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMediaQueryExpression
entryRuleMediaQueryExpression 
:
{ before(grammarAccess.getMediaQueryExpressionRule()); }
	 ruleMediaQueryExpression
{ after(grammarAccess.getMediaQueryExpressionRule()); } 
	 EOF 
;

// Rule MediaQueryExpression
ruleMediaQueryExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getGroup()); }
(rule__MediaQueryExpression__Group__0)
{ after(grammarAccess.getMediaQueryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePageDeclaration
entryRulePageDeclaration 
:
{ before(grammarAccess.getPageDeclarationRule()); }
	 rulePageDeclaration
{ after(grammarAccess.getPageDeclarationRule()); } 
	 EOF 
;

// Rule PageDeclaration
rulePageDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPageDeclarationAccess().getGroup()); }
(rule__PageDeclaration__Group__0)
{ after(grammarAccess.getPageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration 
:
{ before(grammarAccess.getNamespaceDeclarationRule()); }
	 ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
(rule__NamespaceDeclaration__Group__0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFontFaceDeclaration
entryRuleFontFaceDeclaration 
:
{ before(grammarAccess.getFontFaceDeclarationRule()); }
	 ruleFontFaceDeclaration
{ after(grammarAccess.getFontFaceDeclarationRule()); } 
	 EOF 
;

// Rule FontFaceDeclaration
ruleFontFaceDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFontFaceDeclarationAccess().getGroup()); }
(rule__FontFaceDeclaration__Group__0)
{ after(grammarAccess.getFontFaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleSet
entryRuleRuleSet 
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRuleSetAccess().getGroup()); }
(rule__RuleSet__Group__0)
{ after(grammarAccess.getRuleSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRuleSetBody
entryRuleRuleSetBody 
:
{ before(grammarAccess.getRuleSetBodyRule()); }
	 ruleRuleSetBody
{ after(grammarAccess.getRuleSetBodyRule()); } 
	 EOF 
;

// Rule RuleSetBody
ruleRuleSetBody 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRuleSetBodyAccess().getGroup()); }
(rule__RuleSetBody__Group__0)
{ after(grammarAccess.getRuleSetBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration 
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyDeclarationAccess().getAlternatives()); }
(rule__PropertyDeclaration__Alternatives)
{ after(grammarAccess.getPropertyDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKnownPropertyDeclaration
entryRuleKnownPropertyDeclaration 
:
{ before(grammarAccess.getKnownPropertyDeclarationRule()); }
	 ruleKnownPropertyDeclaration
{ after(grammarAccess.getKnownPropertyDeclarationRule()); } 
	 EOF 
;

// Rule KnownPropertyDeclaration
ruleKnownPropertyDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getKnownPropertyDeclarationAccess().getGroup()); }
(rule__KnownPropertyDeclaration__Group__0)
{ after(grammarAccess.getKnownPropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnrecognizedPropertyDeclaration
entryRuleUnrecognizedPropertyDeclaration 
:
{ before(grammarAccess.getUnrecognizedPropertyDeclarationRule()); }
	 ruleUnrecognizedPropertyDeclaration
{ after(grammarAccess.getUnrecognizedPropertyDeclarationRule()); } 
	 EOF 
;

// Rule UnrecognizedPropertyDeclaration
ruleUnrecognizedPropertyDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getGroup()); }
(rule__UnrecognizedPropertyDeclaration__Group__0)
{ after(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyName
entryRulePropertyName 
:
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyNameAccess().getAlternatives()); }
(rule__PropertyName__Alternatives)
{ after(grammarAccess.getPropertyNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValuesLists
entryRulePropertyValuesLists 
:
{ before(grammarAccess.getPropertyValuesListsRule()); }
	 rulePropertyValuesLists
{ after(grammarAccess.getPropertyValuesListsRule()); } 
	 EOF 
;

// Rule PropertyValuesLists
rulePropertyValuesLists 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyValuesListsAccess().getGroup()); }
(rule__PropertyValuesLists__Group__0)
{ after(grammarAccess.getPropertyValuesListsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValuesList
entryRulePropertyValuesList 
:
{ before(grammarAccess.getPropertyValuesListRule()); }
	 rulePropertyValuesList
{ after(grammarAccess.getPropertyValuesListRule()); } 
	 EOF 
;

// Rule PropertyValuesList
rulePropertyValuesList 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
(
{ before(grammarAccess.getPropertyValuesListAccess().getValuesAssignment()); }
(rule__PropertyValuesList__ValuesAssignment)
{ after(grammarAccess.getPropertyValuesListAccess().getValuesAssignment()); }
)
(
{ before(grammarAccess.getPropertyValuesListAccess().getValuesAssignment()); }
(rule__PropertyValuesList__ValuesAssignment)*
{ after(grammarAccess.getPropertyValuesListAccess().getValuesAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PropertyValue
rulePropertyValue 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyValueAccess().getGroup()); }
(rule__PropertyValue__Group__0)
{ after(grammarAccess.getPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSelector
entryRuleSelector 
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSelectorAccess().getCombinatorExpressionParserRuleCall()); }
	ruleCombinatorExpression
{ after(grammarAccess.getSelectorAccess().getCombinatorExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCombinatorExpression
entryRuleCombinatorExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getCombinatorExpressionRule()); }
	 ruleCombinatorExpression
{ after(grammarAccess.getCombinatorExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CombinatorExpression
ruleCombinatorExpression 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCombinatorExpressionAccess().getGroup()); }
(rule__CombinatorExpression__Group__0)
{ after(grammarAccess.getCombinatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSimpleSelectorSequence
entryRuleSimpleSelectorSequence 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSimpleSelectorSequenceRule()); }
	 ruleSimpleSelectorSequence
{ after(grammarAccess.getSimpleSelectorSequenceRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SimpleSelectorSequence
ruleSimpleSelectorSequence 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getGroup()); }
(rule__SimpleSelectorSequence__Group__0)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTailSimpleSelector
entryRuleTailSimpleSelector 
:
{ before(grammarAccess.getTailSimpleSelectorRule()); }
	 ruleTailSimpleSelector
{ after(grammarAccess.getTailSimpleSelectorRule()); } 
	 EOF 
;

// Rule TailSimpleSelector
ruleTailSimpleSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTailSimpleSelectorAccess().getAlternatives()); }
(rule__TailSimpleSelector__Alternatives)
{ after(grammarAccess.getTailSimpleSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypeSelector
entryRuleTypeSelector 
:
{ before(grammarAccess.getTypeSelectorRule()); }
	 ruleTypeSelector
{ after(grammarAccess.getTypeSelectorRule()); } 
	 EOF 
;

// Rule TypeSelector
ruleTypeSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeSelectorAccess().getGroup()); }
(rule__TypeSelector__Group__0)
{ after(grammarAccess.getTypeSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespacePrefix
entryRuleNamespacePrefix 
:
{ before(grammarAccess.getNamespacePrefixRule()); }
	 ruleNamespacePrefix
{ after(grammarAccess.getNamespacePrefixRule()); } 
	 EOF 
;

// Rule NamespacePrefix
ruleNamespacePrefix 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNamespacePrefixAccess().getAlternatives()); }
(rule__NamespacePrefix__Alternatives)
{ after(grammarAccess.getNamespacePrefixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector 
:
{ before(grammarAccess.getUniversalSelectorRule()); }
	 ruleUniversalSelector
{ after(grammarAccess.getUniversalSelectorRule()); } 
	 EOF 
;

// Rule UniversalSelector
ruleUniversalSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUniversalSelectorAccess().getGroup()); }
(rule__UniversalSelector__Group__0)
{ after(grammarAccess.getUniversalSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getAttributeSelectorRule()); }
	 ruleAttributeSelector
{ after(grammarAccess.getAttributeSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AttributeSelector
ruleAttributeSelector 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAttributeSelectorAccess().getGroup()); }
(rule__AttributeSelector__Group__0)
{ after(grammarAccess.getAttributeSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Attribute
ruleAttribute 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAttributeValueLiteral
entryRuleAttributeValueLiteral 
:
{ before(grammarAccess.getAttributeValueLiteralRule()); }
	 ruleAttributeValueLiteral
{ after(grammarAccess.getAttributeValueLiteralRule()); } 
	 EOF 
;

// Rule AttributeValueLiteral
ruleAttributeValueLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getAlternatives()); }
(rule__AttributeValueLiteral__Alternatives)
{ after(grammarAccess.getAttributeValueLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIDSelector
entryRuleIDSelector 
:
{ before(grammarAccess.getIDSelectorRule()); }
	 ruleIDSelector
{ after(grammarAccess.getIDSelectorRule()); } 
	 EOF 
;

// Rule IDSelector
ruleIDSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIDSelectorAccess().getNameAssignment()); }
(rule__IDSelector__NameAssignment)
{ after(grammarAccess.getIDSelectorAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassSelector
entryRuleClassSelector 
:
{ before(grammarAccess.getClassSelectorRule()); }
	 ruleClassSelector
{ after(grammarAccess.getClassSelectorRule()); } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassSelectorAccess().getNameAssignment()); }
(rule__ClassSelector__NameAssignment)
{ after(grammarAccess.getClassSelectorAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoSelector
entryRulePseudoSelector 
:
{ before(grammarAccess.getPseudoSelectorRule()); }
	 rulePseudoSelector
{ after(grammarAccess.getPseudoSelectorRule()); } 
	 EOF 
;

// Rule PseudoSelector
rulePseudoSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPseudoSelectorAccess().getAlternatives()); }
(rule__PseudoSelector__Alternatives)
{ after(grammarAccess.getPseudoSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoArgsPseudoClassSelector
entryRuleNoArgsPseudoClassSelector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNoArgsPseudoClassSelectorRule()); }
	 ruleNoArgsPseudoClassSelector
{ after(grammarAccess.getNoArgsPseudoClassSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NoArgsPseudoClassSelector
ruleNoArgsPseudoClassSelector 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoArgsPseudoClassSelectorAccess().getGroup()); }
(rule__NoArgsPseudoClassSelector__Group__0)
{ after(grammarAccess.getNoArgsPseudoClassSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePseudoElementSelector
entryRulePseudoElementSelector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getPseudoElementSelectorRule()); }
	 rulePseudoElementSelector
{ after(grammarAccess.getPseudoElementSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PseudoElementSelector
rulePseudoElementSelector 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getGroup()); }
(rule__PseudoElementSelector__Group__0)
{ after(grammarAccess.getPseudoElementSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLanguagePseudoClassSelector
entryRuleLanguagePseudoClassSelector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getLanguagePseudoClassSelectorRule()); }
	 ruleLanguagePseudoClassSelector
{ after(grammarAccess.getLanguagePseudoClassSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LanguagePseudoClassSelector
ruleLanguagePseudoClassSelector 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getGroup()); }
(rule__LanguagePseudoClassSelector__Group__0)
{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFunctionalPseudoClassSelector
entryRuleFunctionalPseudoClassSelector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFunctionalPseudoClassSelectorRule()); }
	 ruleFunctionalPseudoClassSelector
{ after(grammarAccess.getFunctionalPseudoClassSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FunctionalPseudoClassSelector
ruleFunctionalPseudoClassSelector 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getGroup()); }
(rule__FunctionalPseudoClassSelector__Group__0)
{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleTypeArgument
entryRuleTypeArgument 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getTypeArgumentRule()); }
	 ruleTypeArgument
{ after(grammarAccess.getTypeArgumentRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TypeArgument
ruleTypeArgument 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeArgumentAccess().getAlternatives()); }
(rule__TypeArgument__Alternatives)
{ after(grammarAccess.getTypeArgumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleLinearArgument
entryRuleLinearArgument 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getLinearArgumentRule()); }
	 ruleLinearArgument
{ after(grammarAccess.getLinearArgumentRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LinearArgument
ruleLinearArgument 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLinearArgumentAccess().getGroup()); }
(rule__LinearArgument__Group__0)
{ after(grammarAccess.getLinearArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCoefficient
entryRuleCoefficient 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getCoefficientRule()); }
	 ruleCoefficient
{ after(grammarAccess.getCoefficientRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Coefficient
ruleCoefficient 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCoefficientAccess().getAlternatives()); }
(rule__Coefficient__Alternatives)
{ after(grammarAccess.getCoefficientAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleConstantArgument
entryRuleConstantArgument 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getConstantArgumentRule()); }
	 ruleConstantArgument
{ after(grammarAccess.getConstantArgumentRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConstantArgument
ruleConstantArgument 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantArgumentAccess().getGroup()); }
(rule__ConstantArgument__Group__0)
{ after(grammarAccess.getConstantArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleParityArgument
entryRuleParityArgument 
:
{ before(grammarAccess.getParityArgumentRule()); }
	 ruleParityArgument
{ after(grammarAccess.getParityArgumentRule()); } 
	 EOF 
;

// Rule ParityArgument
ruleParityArgument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParityArgumentAccess().getParityAssignment()); }
(rule__ParityArgument__ParityAssignment)
{ after(grammarAccess.getParityArgumentAccess().getParityAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegationSelector
entryRuleNegationSelector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNegationSelectorRule()); }
	 ruleNegationSelector
{ after(grammarAccess.getNegationSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NegationSelector
ruleNegationSelector 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNegationSelectorAccess().getGroup()); }
(rule__NegationSelector__Group__0)
{ after(grammarAccess.getNegationSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNegationSimpleSelector
entryRuleNegationSimpleSelector 
:
{ before(grammarAccess.getNegationSimpleSelectorRule()); }
	 ruleNegationSimpleSelector
{ after(grammarAccess.getNegationSimpleSelectorRule()); } 
	 EOF 
;

// Rule NegationSimpleSelector
ruleNegationSimpleSelector 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getAlternatives()); }
(rule__NegationSimpleSelector__Alternatives)
{ after(grammarAccess.getNegationSimpleSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueLiteral
entryRuleValueLiteral 
:
{ before(grammarAccess.getValueLiteralRule()); }
	 ruleValueLiteral
{ after(grammarAccess.getValueLiteralRule()); } 
	 EOF 
;

// Rule ValueLiteral
ruleValueLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getValueLiteralAccess().getAlternatives()); }
(rule__ValueLiteral__Alternatives)
{ after(grammarAccess.getValueLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumberLiteralAccess().getAlternatives()); }
(rule__NumberLiteral__Alternatives)
{ after(grammarAccess.getNumberLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSizeLiteral
entryRuleSizeLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSizeLiteralRule()); }
	 ruleSizeLiteral
{ after(grammarAccess.getSizeLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SizeLiteral
ruleSizeLiteral 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSizeLiteralAccess().getGroup()); }
(rule__SizeLiteral__Group__0)
{ after(grammarAccess.getSizeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColorLiteral
entryRuleColorLiteral 
:
{ before(grammarAccess.getColorLiteralRule()); }
	 ruleColorLiteral
{ after(grammarAccess.getColorLiteralRule()); } 
	 EOF 
;

// Rule ColorLiteral
ruleColorLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getColorLiteralAccess().getAlternatives()); }
(rule__ColorLiteral__Alternatives)
{ after(grammarAccess.getColorLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentColorLiteral
entryRuleComponentColorLiteral 
:
{ before(grammarAccess.getComponentColorLiteralRule()); }
	 ruleComponentColorLiteral
{ after(grammarAccess.getComponentColorLiteralRule()); } 
	 EOF 
;

// Rule ComponentColorLiteral
ruleComponentColorLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponentColorLiteralAccess().getAlternatives()); }
(rule__ComponentColorLiteral__Alternatives)
{ after(grammarAccess.getComponentColorLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColorComponentLiteral
entryRuleColorComponentLiteral 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getColorComponentLiteralRule()); }
	 ruleColorComponentLiteral
{ after(grammarAccess.getColorComponentLiteralRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorComponentLiteral
ruleColorComponentLiteral 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getColorComponentLiteralAccess().getGroup()); }
(rule__ColorComponentLiteral__Group__0)
{ after(grammarAccess.getColorComponentLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleURLLiteral
entryRuleURLLiteral 
:
{ before(grammarAccess.getURLLiteralRule()); }
	 ruleURLLiteral
{ after(grammarAccess.getURLLiteralRule()); } 
	 EOF 
;

// Rule URLLiteral
ruleURLLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getURLLiteralAccess().getValueAssignment()); }
(rule__URLLiteral__ValueAssignment)
{ after(grammarAccess.getURLLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleFunctionCallLiteral
entryRuleFunctionCallLiteral 
:
{ before(grammarAccess.getFunctionCallLiteralRule()); }
	 ruleFunctionCallLiteral
{ after(grammarAccess.getFunctionCallLiteralRule()); } 
	 EOF 
;

// Rule FunctionCallLiteral
ruleFunctionCallLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getAlternatives()); }
(rule__FunctionCallLiteral__Alternatives)
{ after(grammarAccess.getFunctionCallLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule KnownProperties
ruleKnownProperties
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertiesAccess().getAlternatives()); }
(rule__KnownProperties__Alternatives)
{ after(grammarAccess.getKnownPropertiesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AttributeSelectorMatchers
ruleAttributeSelectorMatchers
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getAlternatives()); }
(rule__AttributeSelectorMatchers__Alternatives)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NoArgsPseudos
ruleNoArgsPseudos
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoArgsPseudosAccess().getAlternatives()); }
(rule__NoArgsPseudos__Alternatives)
{ after(grammarAccess.getNoArgsPseudosAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PseudoElements
rulePseudoElements
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementsAccess().getAlternatives()); }
(rule__PseudoElements__Alternatives)
{ after(grammarAccess.getPseudoElementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule FunctionalPseudoClasses
ruleFunctionalPseudoClasses
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getAlternatives()); }
(rule__FunctionalPseudoClasses__Alternatives)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Parities
ruleParities
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParitiesAccess().getAlternatives()); }
(rule__Parities__Alternatives)
{ after(grammarAccess.getParitiesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Dimensions
ruleDimensions
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionsAccess().getAlternatives()); }
(rule__Dimensions__Alternatives)
{ after(grammarAccess.getDimensionsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ColorNames
ruleColorNames
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorNamesAccess().getAlternatives()); }
(rule__ColorNames__Alternatives)
{ after(grammarAccess.getColorNamesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__CSSTopLevelStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSTopLevelStatementAccess().getRuleSetParserRuleCall_0()); }
	ruleRuleSet
{ after(grammarAccess.getCSSTopLevelStatementAccess().getRuleSetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCSSTopLevelStatementAccess().getCSSOtherTopLevelDeclarationParserRuleCall_1()); }
	ruleCSSOtherTopLevelDeclaration
{ after(grammarAccess.getCSSTopLevelStatementAccess().getCSSOtherTopLevelDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CSSOtherTopLevelDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getMediaDeclarationParserRuleCall_0()); }
	ruleMediaDeclaration
{ after(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getMediaDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getPageDeclarationParserRuleCall_1()); }
	rulePageDeclaration
{ after(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getPageDeclarationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getNamespaceDeclarationParserRuleCall_2()); }
	ruleNamespaceDeclaration
{ after(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getNamespaceDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getFontFaceDeclarationParserRuleCall_3()); }
	ruleFontFaceDeclaration
{ after(grammarAccess.getCSSOtherTopLevelDeclarationAccess().getFontFaceDeclarationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportURIAssignment_1_0()); }
(rule__ImportDeclaration__ImportURIAssignment_1_0)
{ after(grammarAccess.getImportDeclarationAccess().getImportURIAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getImportDeclarationAccess().getUrlAssignment_1_1()); }
(rule__ImportDeclaration__UrlAssignment_1_1)
{ after(grammarAccess.getImportDeclarationAccess().getUrlAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclarationMembers__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationMembersAccess().getRuleSetParserRuleCall_0()); }
	ruleRuleSet
{ after(grammarAccess.getMediaDeclarationMembersAccess().getRuleSetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMediaDeclarationMembersAccess().getGroup_1()); }
(rule__MediaDeclarationMembers__Group_1__0)
{ after(grammarAccess.getMediaDeclarationMembersAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getGroup_0()); }
(rule__MediaQuery__Group_0__0)
{ after(grammarAccess.getMediaQueryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMediaQueryAccess().getGroup_1()); }
(rule__MediaQuery__Group_1__0)
{ after(grammarAccess.getMediaQueryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getOnlyAssignment_0_0_0()); }
(rule__MediaQuery__OnlyAssignment_0_0_0)
{ after(grammarAccess.getMediaQueryAccess().getOnlyAssignment_0_0_0()); }
)

    |(
{ before(grammarAccess.getMediaQueryAccess().getNotAssignment_0_0_1()); }
(rule__MediaQuery__NotAssignment_0_0_1)
{ after(grammarAccess.getMediaQueryAccess().getNotAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__UrlAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getUrlSTRINGTerminalRuleCall_2_0_0()); }
	RULE_STRING
{ after(grammarAccess.getNamespaceDeclarationAccess().getUrlSTRINGTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getNamespaceDeclarationAccess().getUrlURLTerminalRuleCall_2_0_1()); }
	RULE_URL
{ after(grammarAccess.getNamespaceDeclarationAccess().getUrlURLTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getKnownPropertyDeclarationParserRuleCall_0()); }
	ruleKnownPropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationAccess().getKnownPropertyDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyDeclarationAccess().getUnrecognizedPropertyDeclarationParserRuleCall_1()); }
	ruleUnrecognizedPropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationAccess().getUnrecognizedPropertyDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyNameAccess().getIDENTTerminalRuleCall_0()); }
	RULE_IDENT
{ after(grammarAccess.getPropertyNameAccess().getIDENTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyNameAccess().getEmptyKeyword_1()); }

	KEYWORD_51 

{ after(grammarAccess.getPropertyNameAccess().getEmptyKeyword_1()); }
)

    |(
{ before(grammarAccess.getPropertyNameAccess().getAlphaKeyword_2()); }

	KEYWORD_48 

{ after(grammarAccess.getPropertyNameAccess().getAlphaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getGroup_1_0()); }
(rule__CombinatorExpression__Group_1_0__0)
{ after(grammarAccess.getCombinatorExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getCombinatorExpressionAccess().getGroup_1_1()); }
(rule__CombinatorExpression__Group_1_1__0)
{ after(grammarAccess.getCombinatorExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getCombinatorExpressionAccess().getGroup_1_2()); }
(rule__CombinatorExpression__Group_1_2__0)
{ after(grammarAccess.getCombinatorExpressionAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getCombinatorExpressionAccess().getGroup_1_3()); }
(rule__CombinatorExpression__Group_1_3__0)
{ after(grammarAccess.getCombinatorExpressionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getGroup_1_0()); }
(rule__SimpleSelectorSequence__Group_1_0__0)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getGroup_1_0()); }
)

    |(
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsAssignment_1_1()); }
(rule__SimpleSelectorSequence__SimpleSelectorsAssignment_1_1)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsAssignment_1_1()); }
)
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsAssignment_1_1()); }
(rule__SimpleSelectorSequence__SimpleSelectorsAssignment_1_1)*
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__HeadAlternatives_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getHeadTypeSelectorParserRuleCall_1_0_0_0_0()); }
	ruleTypeSelector
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getHeadTypeSelectorParserRuleCall_1_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getHeadUniversalSelectorParserRuleCall_1_0_0_0_1()); }
	ruleUniversalSelector
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getHeadUniversalSelectorParserRuleCall_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TailSimpleSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTailSimpleSelectorAccess().getIDSelectorParserRuleCall_0()); }
	ruleIDSelector
{ after(grammarAccess.getTailSimpleSelectorAccess().getIDSelectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTailSimpleSelectorAccess().getAttributeSelectorParserRuleCall_1()); }
	ruleAttributeSelector
{ after(grammarAccess.getTailSimpleSelectorAccess().getAttributeSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTailSimpleSelectorAccess().getClassSelectorParserRuleCall_2()); }
	ruleClassSelector
{ after(grammarAccess.getTailSimpleSelectorAccess().getClassSelectorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTailSimpleSelectorAccess().getPseudoSelectorParserRuleCall_3()); }
	rulePseudoSelector
{ after(grammarAccess.getTailSimpleSelectorAccess().getPseudoSelectorParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTailSimpleSelectorAccess().getNegationSelectorParserRuleCall_4()); }
	ruleNegationSelector
{ after(grammarAccess.getTailSimpleSelectorAccess().getNegationSelectorParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacePrefix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getGroup_0()); }
(rule__NamespacePrefix__Group_0__0)
{ after(grammarAccess.getNamespacePrefixAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNamespacePrefixAccess().getGroup_1()); }
(rule__NamespacePrefix__Group_1__0)
{ after(grammarAccess.getNamespacePrefixAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getGroup_0_0_0()); }
(rule__NamespacePrefix__Group_0_0_0__0)
{ after(grammarAccess.getNamespacePrefixAccess().getGroup_0_0_0()); }
)

    |(
{ before(grammarAccess.getNamespacePrefixAccess().getGroup_0_0_1()); }
(rule__NamespacePrefix__Group_0_0_1__0)
{ after(grammarAccess.getNamespacePrefixAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getGroup_0()); }
(rule__AttributeValueLiteral__Group_0__0)
{ after(grammarAccess.getAttributeValueLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueLiteralAccess().getGroup_1()); }
(rule__AttributeValueLiteral__Group_1__0)
{ after(grammarAccess.getAttributeValueLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAttributeValueLiteralAccess().getGroup_2()); }
(rule__AttributeValueLiteral__Group_2__0)
{ after(grammarAccess.getAttributeValueLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__ValueAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueIDENTTerminalRuleCall_0_1_0_0()); }
	RULE_IDENT
{ after(grammarAccess.getAttributeValueLiteralAccess().getValueIDENTTerminalRuleCall_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueSTRINGTerminalRuleCall_0_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getAttributeValueLiteralAccess().getValueSTRINGTerminalRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IDSelector__NameAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDSelectorAccess().getNameHASH_IDTerminalRuleCall_0_0()); }
	RULE_HASH_ID
{ after(grammarAccess.getIDSelectorAccess().getNameHASH_IDTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getIDSelectorAccess().getNameHEX_COLORTerminalRuleCall_0_1()); }
	RULE_HEX_COLOR
{ after(grammarAccess.getIDSelectorAccess().getNameHEX_COLORTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoSelectorAccess().getNoArgsPseudoClassSelectorParserRuleCall_0()); }
	ruleNoArgsPseudoClassSelector
{ after(grammarAccess.getPseudoSelectorAccess().getNoArgsPseudoClassSelectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPseudoSelectorAccess().getPseudoElementSelectorParserRuleCall_1()); }
	rulePseudoElementSelector
{ after(grammarAccess.getPseudoSelectorAccess().getPseudoElementSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPseudoSelectorAccess().getLanguagePseudoClassSelectorParserRuleCall_2()); }
	ruleLanguagePseudoClassSelector
{ after(grammarAccess.getPseudoSelectorAccess().getLanguagePseudoClassSelectorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPseudoSelectorAccess().getFunctionalPseudoClassSelectorParserRuleCall_3()); }
	ruleFunctionalPseudoClassSelector
{ after(grammarAccess.getPseudoSelectorAccess().getFunctionalPseudoClassSelectorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getParityArgumentParserRuleCall_0()); }
	ruleParityArgument
{ after(grammarAccess.getTypeArgumentAccess().getParityArgumentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeArgumentAccess().getLinearArgumentParserRuleCall_1()); }
	ruleLinearArgument
{ after(grammarAccess.getTypeArgumentAccess().getLinearArgumentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeArgumentAccess().getConstantArgumentParserRuleCall_2()); }
	ruleConstantArgument
{ after(grammarAccess.getTypeArgumentAccess().getConstantArgumentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__ConstantSignAlternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getConstantSignHyphenMinusKeyword_2_0_0_0()); }

	KEYWORD_7 

{ after(grammarAccess.getLinearArgumentAccess().getConstantSignHyphenMinusKeyword_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getLinearArgumentAccess().getConstantSignPlusSignKeyword_2_0_0_1()); }

	KEYWORD_5 

{ after(grammarAccess.getLinearArgumentAccess().getConstantSignPlusSignKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coefficient__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoefficientAccess().getIdentAssignment_0()); }
(rule__Coefficient__IdentAssignment_0)
{ after(grammarAccess.getCoefficientAccess().getIdentAssignment_0()); }
)

    |(
{ before(grammarAccess.getCoefficientAccess().getGroup_1()); }
(rule__Coefficient__Group_1__0)
{ after(grammarAccess.getCoefficientAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantArgument__SignAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantArgumentAccess().getSignHyphenMinusKeyword_0_0_0()); }

	KEYWORD_7 

{ after(grammarAccess.getConstantArgumentAccess().getSignHyphenMinusKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getConstantArgumentAccess().getSignPlusSignKeyword_0_0_1()); }

	KEYWORD_5 

{ after(grammarAccess.getConstantArgumentAccess().getSignPlusSignKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegationSimpleSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getTypeSelectorParserRuleCall_0()); }
	ruleTypeSelector
{ after(grammarAccess.getNegationSimpleSelectorAccess().getTypeSelectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getUniversalSelectorParserRuleCall_1()); }
	ruleUniversalSelector
{ after(grammarAccess.getNegationSimpleSelectorAccess().getUniversalSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getAttributeSelectorParserRuleCall_2()); }
	ruleAttributeSelector
{ after(grammarAccess.getNegationSimpleSelectorAccess().getAttributeSelectorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getIDSelectorParserRuleCall_3()); }
	ruleIDSelector
{ after(grammarAccess.getNegationSimpleSelectorAccess().getIDSelectorParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getClassSelectorParserRuleCall_4()); }
	ruleClassSelector
{ after(grammarAccess.getNegationSimpleSelectorAccess().getClassSelectorParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getNegationSimpleSelectorAccess().getPseudoSelectorParserRuleCall_5()); }
	rulePseudoSelector
{ after(grammarAccess.getNegationSimpleSelectorAccess().getPseudoSelectorParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueLiteralAccess().getSizeLiteralParserRuleCall_0()); }
	ruleSizeLiteral
{ after(grammarAccess.getValueLiteralAccess().getSizeLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_1()); }
	ruleStringLiteral
{ after(grammarAccess.getValueLiteralAccess().getStringLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getColorLiteralParserRuleCall_2()); }
	ruleColorLiteral
{ after(grammarAccess.getValueLiteralAccess().getColorLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getURLLiteralParserRuleCall_3()); }
	ruleURLLiteral
{ after(grammarAccess.getValueLiteralAccess().getURLLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueLiteralAccess().getFunctionCallLiteralParserRuleCall_4()); }
	ruleFunctionCallLiteral
{ after(grammarAccess.getValueLiteralAccess().getFunctionCallLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup_0()); }
(rule__NumberLiteral__Group_0__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNumberLiteralAccess().getGroup_1()); }
(rule__NumberLiteral__Group_1__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getGroup_0_0()); }
(rule__SizeLiteral__Group_0_0__0)
{ after(grammarAccess.getSizeLiteralAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getSizeLiteralAccess().getGroup_0_1()); }
(rule__SizeLiteral__Group_0_1__0)
{ after(grammarAccess.getSizeLiteralAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getGroup_0()); }
(rule__ColorLiteral__Group_0__0)
{ after(grammarAccess.getColorLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getColorLiteralAccess().getGroup_1()); }
(rule__ColorLiteral__Group_1__0)
{ after(grammarAccess.getColorLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getColorLiteralAccess().getComponentColorLiteralParserRuleCall_2()); }
	ruleComponentColorLiteral
{ after(grammarAccess.getColorLiteralAccess().getComponentColorLiteralParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getGroup_0()); }
(rule__ComponentColorLiteral__Group_0__0)
{ after(grammarAccess.getComponentColorLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getComponentColorLiteralAccess().getGroup_1()); }
(rule__ComponentColorLiteral__Group_1__0)
{ after(grammarAccess.getComponentColorLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getComponentColorLiteralAccess().getGroup_2()); }
(rule__ComponentColorLiteral__Group_2__0)
{ after(grammarAccess.getComponentColorLiteralAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getComponentColorLiteralAccess().getGroup_3()); }
(rule__ComponentColorLiteral__Group_3__0)
{ after(grammarAccess.getComponentColorLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getGroup_0()); }
(rule__FunctionCallLiteral__Group_0__0)
{ after(grammarAccess.getFunctionCallLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallLiteralAccess().getGroup_1()); }
(rule__FunctionCallLiteral__Group_1__0)
{ after(grammarAccess.getFunctionCallLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KnownProperties__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertiesAccess().getColorEnumLiteralDeclaration_0()); }
(	KEYWORD_50
)
{ after(grammarAccess.getKnownPropertiesAccess().getColorEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getKnownPropertiesAccess().getBorder_topEnumLiteralDeclaration_1()); }
(	KEYWORD_70
)
{ after(grammarAccess.getKnownPropertiesAccess().getBorder_topEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelectorMatchers__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getPrefixEnumLiteralDeclaration_0()); }
(	KEYWORD_22
)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getPrefixEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getSuffixEnumLiteralDeclaration_1()); }
(	KEYWORD_20
)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getSuffixEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getSubstringEnumLiteralDeclaration_2()); }
(	KEYWORD_21
)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getSubstringEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getExactEnumLiteralDeclaration_3()); }
(	KEYWORD_11
)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getExactEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getIncludesEnumLiteralDeclaration_4()); }
(	KEYWORD_32
)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getIncludesEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorMatchersAccess().getLanguageEnumLiteralDeclaration_5()); }
(	KEYWORD_31
)
{ after(grammarAccess.getAttributeSelectorMatchersAccess().getLanguageEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoArgsPseudos__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoArgsPseudosAccess().getLinkEnumLiteralDeclaration_0()); }
(	KEYWORD_41
)
{ after(grammarAccess.getNoArgsPseudosAccess().getLinkEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getVisitedEnumLiteralDeclaration_1()); }
(	KEYWORD_63
)
{ after(grammarAccess.getNoArgsPseudosAccess().getVisitedEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getHoverEnumLiteralDeclaration_2()); }
(	KEYWORD_53
)
{ after(grammarAccess.getNoArgsPseudosAccess().getHoverEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getActiveEnumLiteralDeclaration_3()); }
(	KEYWORD_56
)
{ after(grammarAccess.getNoArgsPseudosAccess().getActiveEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getFocusEnumLiteralDeclaration_4()); }
(	KEYWORD_52
)
{ after(grammarAccess.getNoArgsPseudosAccess().getFocusEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getTargetEnumLiteralDeclaration_5()); }
(	KEYWORD_58
)
{ after(grammarAccess.getNoArgsPseudosAccess().getTargetEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getEnabledEnumLiteralDeclaration_6()); }
(	KEYWORD_61
)
{ after(grammarAccess.getNoArgsPseudosAccess().getEnabledEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getDisabledEnumLiteralDeclaration_7()); }
(	KEYWORD_65
)
{ after(grammarAccess.getNoArgsPseudosAccess().getDisabledEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getCheckedEnumLiteralDeclaration_8()); }
(	KEYWORD_60
)
{ after(grammarAccess.getNoArgsPseudosAccess().getCheckedEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getIndeterminateEnumLiteralDeclaration_9()); }
(	KEYWORD_80
)
{ after(grammarAccess.getNoArgsPseudosAccess().getIndeterminateEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getRootEnumLiteralDeclaration_10()); }
(	KEYWORD_45
)
{ after(grammarAccess.getNoArgsPseudosAccess().getRootEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getFirstChildEnumLiteralDeclaration_11()); }
(	KEYWORD_74
)
{ after(grammarAccess.getNoArgsPseudosAccess().getFirstChildEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getLastChildEnumLiteralDeclaration_12()); }
(	KEYWORD_72
)
{ after(grammarAccess.getNoArgsPseudosAccess().getLastChildEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getOnlyChildEnumLiteralDeclaration_13()); }
(	KEYWORD_73
)
{ after(grammarAccess.getNoArgsPseudosAccess().getOnlyChildEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getNoArgsPseudosAccess().getEmptyEnumLiteralDeclaration_14()); }
(	KEYWORD_51
)
{ after(grammarAccess.getNoArgsPseudosAccess().getEmptyEnumLiteralDeclaration_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoElements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementsAccess().getFirstLetterEnumLiteralDeclaration_0()); }
(	KEYWORD_76
)
{ after(grammarAccess.getPseudoElementsAccess().getFirstLetterEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPseudoElementsAccess().getFirstLineEnumLiteralDeclaration_1()); }
(	KEYWORD_71
)
{ after(grammarAccess.getPseudoElementsAccess().getFirstLineEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPseudoElementsAccess().getBeforeEnumLiteralDeclaration_2()); }
(	KEYWORD_57
)
{ after(grammarAccess.getPseudoElementsAccess().getBeforeEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPseudoElementsAccess().getAfterEnumLiteralDeclaration_3()); }
(	KEYWORD_47
)
{ after(grammarAccess.getPseudoElementsAccess().getAfterEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClasses__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getNthChildEnumLiteralDeclaration_0()); }
(	KEYWORD_66
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getNthChildEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getNthLastChildEnumLiteralDeclaration_1()); }
(	KEYWORD_81
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getNthLastChildEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getNthOfTypeEnumLiteralDeclaration_2()); }
(	KEYWORD_75
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getNthOfTypeEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getNthLastOfTypeEnumLiteralDeclaration_3()); }
(	KEYWORD_82
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getNthLastOfTypeEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getFirstOfTypeEnumLiteralDeclaration_4()); }
(	KEYWORD_79
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getFirstOfTypeEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getLastOfTypeEnumLiteralDeclaration_5()); }
(	KEYWORD_77
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getLastOfTypeEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFunctionalPseudoClassesAccess().getOnlyOfTypeEnumLiteralDeclaration_6()); }
(	KEYWORD_78
)
{ after(grammarAccess.getFunctionalPseudoClassesAccess().getOnlyOfTypeEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parities__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParitiesAccess().getOddEnumLiteralDeclaration_0()); }
(	KEYWORD_36
)
{ after(grammarAccess.getParitiesAccess().getOddEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getParitiesAccess().getEvenEnumLiteralDeclaration_1()); }
(	KEYWORD_38
)
{ after(grammarAccess.getParitiesAccess().getEvenEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimensions__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionsAccess().getInEnumLiteralDeclaration_0()); }
(	KEYWORD_26
)
{ after(grammarAccess.getDimensionsAccess().getInEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getCmEnumLiteralDeclaration_1()); }
(	KEYWORD_23
)
{ after(grammarAccess.getDimensionsAccess().getCmEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getMmEnumLiteralDeclaration_2()); }
(	KEYWORD_27
)
{ after(grammarAccess.getDimensionsAccess().getMmEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getPtEnumLiteralDeclaration_3()); }
(	KEYWORD_29
)
{ after(grammarAccess.getDimensionsAccess().getPtEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getPcEnumLiteralDeclaration_4()); }
(	KEYWORD_28
)
{ after(grammarAccess.getDimensionsAccess().getPcEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getEmEnumLiteralDeclaration_5()); }
(	KEYWORD_24
)
{ after(grammarAccess.getDimensionsAccess().getEmEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getExEnumLiteralDeclaration_6()); }
(	KEYWORD_25
)
{ after(grammarAccess.getDimensionsAccess().getExEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getPxEnumLiteralDeclaration_7()); }
(	KEYWORD_30
)
{ after(grammarAccess.getDimensionsAccess().getPxEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getDimensionsAccess().getPercEnumLiteralDeclaration_8()); }
(	KEYWORD_1
)
{ after(grammarAccess.getDimensionsAccess().getPercEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorNames__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorNamesAccess().getBlackEnumLiteralDeclaration_0()); }
(	KEYWORD_49
)
{ after(grammarAccess.getColorNamesAccess().getBlackEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getColorNamesAccess().getWhiteEnumLiteralDeclaration_1()); }
(	KEYWORD_54
)
{ after(grammarAccess.getColorNamesAccess().getWhiteEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stylesheet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__0__Impl
	rule__Stylesheet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getGroup_0()); }
(rule__Stylesheet__Group_0__0)?
{ after(grammarAccess.getStylesheetAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__1__Impl
	rule__Stylesheet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
(rule__Stylesheet__ImportsAssignment_1)*
{ after(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getStatementsAssignment_2()); }
(rule__Stylesheet__StatementsAssignment_2)*
{ after(grammarAccess.getStylesheetAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Stylesheet__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_0__0__Impl
	rule__Stylesheet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetKeyword_0_0()); }

	KEYWORD_64 

{ after(grammarAccess.getStylesheetAccess().getCharsetKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_0__1__Impl
	rule__Stylesheet__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharSetAssignment_0_1()); }
(rule__Stylesheet__CharSetAssignment_0_1)
{ after(grammarAccess.getStylesheetAccess().getCharSetAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getSemicolonKeyword_0_2()); }

	KEYWORD_10 

{ after(grammarAccess.getStylesheetAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }

	KEYWORD_59 

{ after(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__1__Impl
	rule__ImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getAlternatives_1()); }
(rule__ImportDeclaration__Alternatives_1)
{ after(grammarAccess.getImportDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__2__Impl
	rule__ImportDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup_2()); }
(rule__ImportDeclaration__Group_2__0)?
{ after(grammarAccess.getImportDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_3()); }

	KEYWORD_10 

{ after(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ImportDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group_2__0__Impl
	rule__ImportDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getMediaAssignment_2_0()); }
(rule__ImportDeclaration__MediaAssignment_2_0)
{ after(grammarAccess.getImportDeclarationAccess().getMediaAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup_2_1()); }
(rule__ImportDeclaration__Group_2_1__0)*
{ after(grammarAccess.getImportDeclarationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportDeclaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group_2_1__0__Impl
	rule__ImportDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getCommaKeyword_2_1_0()); }

	KEYWORD_6 

{ after(grammarAccess.getImportDeclarationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getMediaAssignment_2_1_1()); }
(rule__ImportDeclaration__MediaAssignment_2_1_1)
{ after(grammarAccess.getImportDeclarationAccess().getMediaAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MediaDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group__0__Impl
	rule__MediaDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMediaKeyword_0()); }

	KEYWORD_55 

{ after(grammarAccess.getMediaDeclarationAccess().getMediaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group__1__Impl
	rule__MediaDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMediaQueriesAssignment_1()); }
(rule__MediaDeclaration__MediaQueriesAssignment_1)
{ after(grammarAccess.getMediaDeclarationAccess().getMediaQueriesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group__2__Impl
	rule__MediaDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getGroup_2()); }
(rule__MediaDeclaration__Group_2__0)*
{ after(grammarAccess.getMediaDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group__3__Impl
	rule__MediaDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getLeftCurlyBracketKeyword_3()); }

	KEYWORD_16 

{ after(grammarAccess.getMediaDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group__4__Impl
	rule__MediaDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMembersAssignment_4()); }
(rule__MediaDeclaration__MembersAssignment_4)*
{ after(grammarAccess.getMediaDeclarationAccess().getMembersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getRightCurlyBracketKeyword_5()); }

	KEYWORD_18 

{ after(grammarAccess.getMediaDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MediaDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group_2__0__Impl
	rule__MediaDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getCommaKeyword_2_0()); }

	KEYWORD_6 

{ after(grammarAccess.getMediaDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMediaAssignment_2_1()); }
(rule__MediaDeclaration__MediaAssignment_2_1)
{ after(grammarAccess.getMediaDeclarationAccess().getMediaAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MediaDeclarationMembers__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclarationMembers__Group_1__0__Impl
	rule__MediaDeclarationMembers__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclarationMembers__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationMembersAccess().getPropertyDeclarationParserRuleCall_1_0()); }
	rulePropertyDeclaration
{ after(grammarAccess.getMediaDeclarationMembersAccess().getPropertyDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaDeclarationMembers__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaDeclarationMembers__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclarationMembers__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationMembersAccess().getSemicolonKeyword_1_1()); }

	KEYWORD_10 

{ after(grammarAccess.getMediaDeclarationMembersAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MediaQuery__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_0__0__Impl
	rule__MediaQuery__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getAlternatives_0_0()); }
(rule__MediaQuery__Alternatives_0_0)?
{ after(grammarAccess.getMediaQueryAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQuery__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_0__1__Impl
	rule__MediaQuery__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getMediaTypeAssignment_0_1()); }
(rule__MediaQuery__MediaTypeAssignment_0_1)
{ after(grammarAccess.getMediaQueryAccess().getMediaTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQuery__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getGroup_0_2()); }
(rule__MediaQuery__Group_0_2__0)*
{ after(grammarAccess.getMediaQueryAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MediaQuery__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_0_2__0__Impl
	rule__MediaQuery__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getAndKeyword_0_2_0()); }

	KEYWORD_33 

{ after(grammarAccess.getMediaQueryAccess().getAndKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQuery__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getExpressionsAssignment_0_2_1()); }
(rule__MediaQuery__ExpressionsAssignment_0_2_1)
{ after(grammarAccess.getMediaQueryAccess().getExpressionsAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MediaQuery__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_1__0__Impl
	rule__MediaQuery__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getExpressionsAssignment_1_0()); }
(rule__MediaQuery__ExpressionsAssignment_1_0)
{ after(grammarAccess.getMediaQueryAccess().getExpressionsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQuery__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getGroup_1_1()); }
(rule__MediaQuery__Group_1_1__0)*
{ after(grammarAccess.getMediaQueryAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MediaQuery__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_1_1__0__Impl
	rule__MediaQuery__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getAndKeyword_1_1_0()); }

	KEYWORD_33 

{ after(grammarAccess.getMediaQueryAccess().getAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQuery__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQuery__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getExpressionsAssignment_1_1_1()); }
(rule__MediaQuery__ExpressionsAssignment_1_1_1)
{ after(grammarAccess.getMediaQueryAccess().getExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MediaQueryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQueryExpression__Group__0__Impl
	rule__MediaQueryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getLeftParenthesisKeyword_0()); }

	KEYWORD_2 

{ after(grammarAccess.getMediaQueryExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQueryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQueryExpression__Group__1__Impl
	rule__MediaQueryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getFeatureAssignment_1()); }
(rule__MediaQueryExpression__FeatureAssignment_1)
{ after(grammarAccess.getMediaQueryExpressionAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQueryExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQueryExpression__Group__2__Impl
	rule__MediaQueryExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getGroup_2()); }
(rule__MediaQueryExpression__Group_2__0)?
{ after(grammarAccess.getMediaQueryExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQueryExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQueryExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_3 

{ after(grammarAccess.getMediaQueryExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MediaQueryExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQueryExpression__Group_2__0__Impl
	rule__MediaQueryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getColonKeyword_2_0()); }

	KEYWORD_9 

{ after(grammarAccess.getMediaQueryExpressionAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MediaQueryExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MediaQueryExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getExpressionAssignment_2_1()); }
(rule__MediaQueryExpression__ExpressionAssignment_2_1)
{ after(grammarAccess.getMediaQueryExpressionAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PageDeclaration__Group__0__Impl
	rule__PageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getPageKeyword_0()); }

	KEYWORD_46 

{ after(grammarAccess.getPageDeclarationAccess().getPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PageDeclaration__Group__1__Impl
	rule__PageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getGroup_1()); }
(rule__PageDeclaration__Group_1__0)?
{ after(grammarAccess.getPageDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PageDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getBodyAssignment_2()); }
(rule__PageDeclaration__BodyAssignment_2)
{ after(grammarAccess.getPageDeclarationAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PageDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PageDeclaration__Group_1__0__Impl
	rule__PageDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getColonKeyword_1_0()); }

	KEYWORD_9 

{ after(grammarAccess.getPageDeclarationAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PageDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PageDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getPseudoPageAssignment_1_1()); }
(rule__PageDeclaration__PseudoPageAssignment_1_1)
{ after(grammarAccess.getPageDeclarationAccess().getPseudoPageAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }

	KEYWORD_69 

{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__1__Impl
	rule__NamespaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_1()); }
(rule__NamespaceDeclaration__NameAssignment_1)?
{ after(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__2__Impl
	rule__NamespaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getUrlAssignment_2()); }
(rule__NamespaceDeclaration__UrlAssignment_2)
{ after(grammarAccess.getNamespaceDeclarationAccess().getUrlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_3()); }

	KEYWORD_10 

{ after(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FontFaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontFaceDeclaration__Group__0__Impl
	rule__FontFaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFaceDeclarationAccess().getFontFaceKeyword_0()); }

	KEYWORD_68 

{ after(grammarAccess.getFontFaceDeclarationAccess().getFontFaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FontFaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontFaceDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFaceDeclarationAccess().getBodyAssignment_1()); }
(rule__FontFaceDeclaration__BodyAssignment_1)
{ after(grammarAccess.getFontFaceDeclarationAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getSelectorsAssignment_0()); }
(rule__RuleSet__SelectorsAssignment_0)
{ after(grammarAccess.getRuleSetAccess().getSelectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getGroup_1()); }
(rule__RuleSet__Group_1__0)*
{ after(grammarAccess.getRuleSetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getBodyAssignment_2()); }
(rule__RuleSet__BodyAssignment_2)
{ after(grammarAccess.getRuleSetAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleSet__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group_1__0__Impl
	rule__RuleSet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getCommaKeyword_1_0()); }

	KEYWORD_6 

{ after(grammarAccess.getRuleSetAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSet__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getSelectorsAssignment_1_1()); }
(rule__RuleSet__SelectorsAssignment_1_1)
{ after(grammarAccess.getRuleSetAccess().getSelectorsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RuleSetBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group__0__Impl
	rule__RuleSetBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getRuleSetBodyAction_0()); }
(

)
{ after(grammarAccess.getRuleSetBodyAccess().getRuleSetBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSetBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group__1__Impl
	rule__RuleSetBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getLeftCurlyBracketKeyword_1()); }

	KEYWORD_16 

{ after(grammarAccess.getRuleSetBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSetBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group__2__Impl
	rule__RuleSetBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getGroup_2()); }
(rule__RuleSetBody__Group_2__0)?
{ after(grammarAccess.getRuleSetBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSetBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getRightCurlyBracketKeyword_3()); }

	KEYWORD_18 

{ after(grammarAccess.getRuleSetBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RuleSetBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group_2__0__Impl
	rule__RuleSetBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getDeclarationsAssignment_2_0()); }
(rule__RuleSetBody__DeclarationsAssignment_2_0)
{ after(grammarAccess.getRuleSetBodyAccess().getDeclarationsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSetBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group_2__1__Impl
	rule__RuleSetBody__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getGroup_2_1()); }
(rule__RuleSetBody__Group_2_1__0)*
{ after(grammarAccess.getRuleSetBodyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSetBody__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getSemicolonKeyword_2_2()); }
(
	KEYWORD_10 
)?
{ after(grammarAccess.getRuleSetBodyAccess().getSemicolonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RuleSetBody__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group_2_1__0__Impl
	rule__RuleSetBody__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getSemicolonKeyword_2_1_0()); }

	KEYWORD_10 

{ after(grammarAccess.getRuleSetBodyAccess().getSemicolonKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSetBody__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RuleSetBody__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getDeclarationsAssignment_2_1_1()); }
(rule__RuleSetBody__DeclarationsAssignment_2_1_1)
{ after(grammarAccess.getRuleSetBodyAccess().getDeclarationsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KnownPropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KnownPropertyDeclaration__Group__0__Impl
	rule__KnownPropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KnownPropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertyDeclarationAccess().getNameAssignment_0()); }
(rule__KnownPropertyDeclaration__NameAssignment_0)
{ after(grammarAccess.getKnownPropertyDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KnownPropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KnownPropertyDeclaration__Group__1__Impl
	rule__KnownPropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KnownPropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertyDeclarationAccess().getColonKeyword_1()); }

	KEYWORD_9 

{ after(grammarAccess.getKnownPropertyDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KnownPropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KnownPropertyDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KnownPropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertyDeclarationAccess().getValuesListsAssignment_2()); }
(rule__KnownPropertyDeclaration__ValuesListsAssignment_2)
{ after(grammarAccess.getKnownPropertyDeclarationAccess().getValuesListsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnrecognizedPropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnrecognizedPropertyDeclaration__Group__0__Impl
	rule__UnrecognizedPropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnrecognizedPropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getNameAssignment_0()); }
(rule__UnrecognizedPropertyDeclaration__NameAssignment_0)
{ after(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnrecognizedPropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnrecognizedPropertyDeclaration__Group__1__Impl
	rule__UnrecognizedPropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnrecognizedPropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getColonKeyword_1()); }

	KEYWORD_9 

{ after(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnrecognizedPropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnrecognizedPropertyDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnrecognizedPropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getValuesListsAssignment_2()); }
(rule__UnrecognizedPropertyDeclaration__ValuesListsAssignment_2)
{ after(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getValuesListsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PropertyValuesLists__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyValuesLists__Group__0__Impl
	rule__PropertyValuesLists__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesLists__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListsAccess().getListsAssignment_0()); }
(rule__PropertyValuesLists__ListsAssignment_0)
{ after(grammarAccess.getPropertyValuesListsAccess().getListsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValuesLists__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyValuesLists__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesLists__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListsAccess().getGroup_1()); }
(rule__PropertyValuesLists__Group_1__0)*
{ after(grammarAccess.getPropertyValuesListsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyValuesLists__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyValuesLists__Group_1__0__Impl
	rule__PropertyValuesLists__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesLists__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListsAccess().getCommaKeyword_1_0()); }

	KEYWORD_6 

{ after(grammarAccess.getPropertyValuesListsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValuesLists__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyValuesLists__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesLists__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListsAccess().getListsAssignment_1_1()); }
(rule__PropertyValuesLists__ListsAssignment_1_1)
{ after(grammarAccess.getPropertyValuesListsAccess().getListsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyValue__Group__0__Impl
	rule__PropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getValueAssignment_0()); }
(rule__PropertyValue__ValueAssignment_0)
{ after(grammarAccess.getPropertyValueAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getImportantAssignment_1()); }
(rule__PropertyValue__ImportantAssignment_1)?
{ after(grammarAccess.getPropertyValueAccess().getImportantAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CombinatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group__0__Impl
	rule__CombinatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getSimpleSelectorSequenceParserRuleCall_0()); }
	ruleSimpleSelectorSequence
{ after(grammarAccess.getCombinatorExpressionAccess().getSimpleSelectorSequenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getAlternatives_1()); }
(rule__CombinatorExpression__Alternatives_1)*
{ after(grammarAccess.getCombinatorExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CombinatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_0__0__Impl
	rule__CombinatorExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getDescendantCombinatorLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getCombinatorExpressionAccess().getDescendantCombinatorLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_0__1__Impl
	rule__CombinatorExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsIAssignment_1_0_1()); }
(rule__CombinatorExpression__WsIAssignment_1_0_1)
{ after(grammarAccess.getCombinatorExpressionAccess().getWsIAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_0_2()); }
(rule__CombinatorExpression__RightAssignment_1_0_2)
{ after(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CombinatorExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_1__0__Impl
	rule__CombinatorExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getChildCombinatorLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getCombinatorExpressionAccess().getChildCombinatorLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_1__1__Impl
	rule__CombinatorExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsLAssignment_1_1_1()); }
(rule__CombinatorExpression__WsLAssignment_1_1_1)?
{ after(grammarAccess.getCombinatorExpressionAccess().getWsLAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_1__2__Impl
	rule__CombinatorExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getGreaterThanSignKeyword_1_1_2()); }

	KEYWORD_12 

{ after(grammarAccess.getCombinatorExpressionAccess().getGreaterThanSignKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_1__3__Impl
	rule__CombinatorExpression__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsRAssignment_1_1_3()); }
(rule__CombinatorExpression__WsRAssignment_1_1_3)?
{ after(grammarAccess.getCombinatorExpressionAccess().getWsRAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_1_4()); }
(rule__CombinatorExpression__RightAssignment_1_1_4)
{ after(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CombinatorExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_2__0__Impl
	rule__CombinatorExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getAdjacentSiblingCombinatorLeftAction_1_2_0()); }
(

)
{ after(grammarAccess.getCombinatorExpressionAccess().getAdjacentSiblingCombinatorLeftAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_2__1__Impl
	rule__CombinatorExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsLAssignment_1_2_1()); }
(rule__CombinatorExpression__WsLAssignment_1_2_1)?
{ after(grammarAccess.getCombinatorExpressionAccess().getWsLAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_2__2__Impl
	rule__CombinatorExpression__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getPlusSignKeyword_1_2_2()); }

	KEYWORD_5 

{ after(grammarAccess.getCombinatorExpressionAccess().getPlusSignKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_2__3__Impl
	rule__CombinatorExpression__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsRAssignment_1_2_3()); }
(rule__CombinatorExpression__WsRAssignment_1_2_3)?
{ after(grammarAccess.getCombinatorExpressionAccess().getWsRAssignment_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_2_4()); }
(rule__CombinatorExpression__RightAssignment_1_2_4)
{ after(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CombinatorExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_3__0__Impl
	rule__CombinatorExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getGeneralSiblingCombinatorLeftAction_1_3_0()); }
(

)
{ after(grammarAccess.getCombinatorExpressionAccess().getGeneralSiblingCombinatorLeftAction_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_3__1__Impl
	rule__CombinatorExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsLAssignment_1_3_1()); }
(rule__CombinatorExpression__WsLAssignment_1_3_1)?
{ after(grammarAccess.getCombinatorExpressionAccess().getWsLAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_3__2__Impl
	rule__CombinatorExpression__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getTildeKeyword_1_3_2()); }

	KEYWORD_19 

{ after(grammarAccess.getCombinatorExpressionAccess().getTildeKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_3__3__Impl
	rule__CombinatorExpression__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsRAssignment_1_3_3()); }
(rule__CombinatorExpression__WsRAssignment_1_3_3)?
{ after(grammarAccess.getCombinatorExpressionAccess().getWsRAssignment_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CombinatorExpression__Group_1_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CombinatorExpression__Group_1_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__Group_1_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_3_4()); }
(rule__CombinatorExpression__RightAssignment_1_3_4)
{ after(grammarAccess.getCombinatorExpressionAccess().getRightAssignment_1_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SimpleSelectorSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectorSequence__Group__0__Impl
	rule__SimpleSelectorSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorSequenceAction_0()); }
(

)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorSequenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelectorSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectorSequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getAlternatives_1()); }
(rule__SimpleSelectorSequence__Alternatives_1)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleSelectorSequence__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectorSequence__Group_1_0__0__Impl
	rule__SimpleSelectorSequence__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getHeadAssignment_1_0_0()); }
(rule__SimpleSelectorSequence__HeadAssignment_1_0_0)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getHeadAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelectorSequence__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectorSequence__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsAssignment_1_0_1()); }
(rule__SimpleSelectorSequence__SimpleSelectorsAssignment_1_0_1)*
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSelector__Group__0__Impl
	rule__TypeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSelectorAccess().getNamespacePrefixAssignment_0()); }
(rule__TypeSelector__NamespacePrefixAssignment_0)?
{ after(grammarAccess.getTypeSelectorAccess().getNamespacePrefixAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSelectorAccess().getTypeAssignment_1()); }
(rule__TypeSelector__TypeAssignment_1)
{ after(grammarAccess.getTypeSelectorAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespacePrefix__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_0__0__Impl
	rule__NamespacePrefix__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getAlternatives_0_0()); }
(rule__NamespacePrefix__Alternatives_0_0)
{ after(grammarAccess.getNamespacePrefixAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacePrefix__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getVerticalLineKeyword_0_1()); }

	KEYWORD_17 

{ after(grammarAccess.getNamespacePrefixAccess().getVerticalLineKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespacePrefix__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_0_0_0__0__Impl
	rule__NamespacePrefix__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getNamespacePrefixAction_0_0_0_0()); }
(

)
{ after(grammarAccess.getNamespacePrefixAccess().getNamespacePrefixAction_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacePrefix__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getNamespaceAssignment_0_0_0_1()); }
(rule__NamespacePrefix__NamespaceAssignment_0_0_0_1)
{ after(grammarAccess.getNamespacePrefixAccess().getNamespaceAssignment_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespacePrefix__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_0_0_1__0__Impl
	rule__NamespacePrefix__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getUniversalNamespacePrefixAction_0_0_1_0()); }
(

)
{ after(grammarAccess.getNamespacePrefixAccess().getUniversalNamespacePrefixAction_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacePrefix__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getAsteriskKeyword_0_0_1_1()); }

	KEYWORD_4 

{ after(grammarAccess.getNamespacePrefixAccess().getAsteriskKeyword_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespacePrefix__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_1__0__Impl
	rule__NamespacePrefix__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getWithoutNamespacePrefixAction_1_0()); }
(

)
{ after(grammarAccess.getNamespacePrefixAccess().getWithoutNamespacePrefixAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacePrefix__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacePrefix__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getVerticalLineKeyword_1_1()); }

	KEYWORD_17 

{ after(grammarAccess.getNamespacePrefixAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UniversalSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniversalSelector__Group__0__Impl
	rule__UniversalSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0()); }
(

)
{ after(grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniversalSelector__Group__1__Impl
	rule__UniversalSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getNamespacePrefixAssignment_1()); }
(rule__UniversalSelector__NamespacePrefixAssignment_1)?
{ after(grammarAccess.getUniversalSelectorAccess().getNamespacePrefixAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniversalSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2()); }

	KEYWORD_4 

{ after(grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__0__Impl
	rule__AttributeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_0()); }

	KEYWORD_13 

{ after(grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__1__Impl
	rule__AttributeSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getAttributeAssignment_1()); }
(rule__AttributeSelector__AttributeAssignment_1)
{ after(grammarAccess.getAttributeSelectorAccess().getAttributeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__2__Impl
	rule__AttributeSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getGroup_2()); }
(rule__AttributeSelector__Group_2__0)?
{ after(grammarAccess.getAttributeSelectorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_3()); }

	KEYWORD_14 

{ after(grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributeSelector__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group_2__0__Impl
	rule__AttributeSelector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getMatcherAssignment_2_0()); }
(rule__AttributeSelector__MatcherAssignment_2_0)
{ after(grammarAccess.getAttributeSelectorAccess().getMatcherAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getValueAssignment_2_1()); }
(rule__AttributeSelector__ValueAssignment_2_1)
{ after(grammarAccess.getAttributeSelectorAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNamespacePrefixAssignment_0()); }
(rule__Attribute__NamespacePrefixAssignment_0)?
{ after(grammarAccess.getAttributeAccess().getNamespacePrefixAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeValueLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueLiteral__Group_0__0__Impl
	rule__AttributeValueLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getStringAttributeValueLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getAttributeValueLiteralAccess().getStringAttributeValueLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueAssignment_0_1()); }
(rule__AttributeValueLiteral__ValueAssignment_0_1)
{ after(grammarAccess.getAttributeValueLiteralAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeValueLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueLiteral__Group_1__0__Impl
	rule__AttributeValueLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getIntegerAttributeValueLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getAttributeValueLiteralAccess().getIntegerAttributeValueLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueAssignment_1_1()); }
(rule__AttributeValueLiteral__ValueAssignment_1_1)
{ after(grammarAccess.getAttributeValueLiteralAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeValueLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueLiteral__Group_2__0__Impl
	rule__AttributeValueLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getDecimalAttributeValueLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getAttributeValueLiteralAccess().getDecimalAttributeValueLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeValueLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeValueLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueAssignment_2_1()); }
(rule__AttributeValueLiteral__ValueAssignment_2_1)
{ after(grammarAccess.getAttributeValueLiteralAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoArgsPseudoClassSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoArgsPseudoClassSelector__Group__0__Impl
	rule__NoArgsPseudoClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArgsPseudoClassSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoArgsPseudoClassSelectorAccess().getColonKeyword_0()); }

	KEYWORD_9 

{ after(grammarAccess.getNoArgsPseudoClassSelectorAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoArgsPseudoClassSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoArgsPseudoClassSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArgsPseudoClassSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoArgsPseudoClassSelectorAccess().getPseudoAssignment_1()); }
(rule__NoArgsPseudoClassSelector__PseudoAssignment_1)
{ after(grammarAccess.getNoArgsPseudoClassSelectorAccess().getPseudoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PseudoElementSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoElementSelector__Group__0__Impl
	rule__PseudoElementSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoElementSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getColonKeyword_0()); }

	KEYWORD_9 

{ after(grammarAccess.getPseudoElementSelectorAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoElementSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoElementSelector__Group__1__Impl
	rule__PseudoElementSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoElementSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonAssignment_1()); }
(rule__PseudoElementSelector__DoubleSemiColonAssignment_1)?
{ after(grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoElementSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoElementSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoElementSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getPseudoAssignment_2()); }
(rule__PseudoElementSelector__PseudoAssignment_2)
{ after(grammarAccess.getPseudoElementSelectorAccess().getPseudoAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LanguagePseudoClassSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguagePseudoClassSelector__Group__0__Impl
	rule__LanguagePseudoClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguagePseudoClassSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getColonKeyword_0()); }

	KEYWORD_9 

{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguagePseudoClassSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguagePseudoClassSelector__Group__1__Impl
	rule__LanguagePseudoClassSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguagePseudoClassSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getLangKeyword_1()); }

	KEYWORD_40 

{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getLangKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguagePseudoClassSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguagePseudoClassSelector__Group__2__Impl
	rule__LanguagePseudoClassSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguagePseudoClassSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getLeftParenthesisKeyword_2()); }

	KEYWORD_2 

{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguagePseudoClassSelector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguagePseudoClassSelector__Group__3__Impl
	rule__LanguagePseudoClassSelector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguagePseudoClassSelector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getLangugageIdAssignment_3()); }
(rule__LanguagePseudoClassSelector__LangugageIdAssignment_3)
{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getLangugageIdAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LanguagePseudoClassSelector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LanguagePseudoClassSelector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LanguagePseudoClassSelector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getRightParenthesisKeyword_4()); }

	KEYWORD_3 

{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionalPseudoClassSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalPseudoClassSelector__Group__0__Impl
	rule__FunctionalPseudoClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getColonKeyword_0()); }

	KEYWORD_9 

{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalPseudoClassSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalPseudoClassSelector__Group__1__Impl
	rule__FunctionalPseudoClassSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getPseudoAssignment_1()); }
(rule__FunctionalPseudoClassSelector__PseudoAssignment_1)
{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getPseudoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalPseudoClassSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalPseudoClassSelector__Group__2__Impl
	rule__FunctionalPseudoClassSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getLeftParenthesisKeyword_2()); }

	KEYWORD_2 

{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalPseudoClassSelector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalPseudoClassSelector__Group__3__Impl
	rule__FunctionalPseudoClassSelector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getArgumentAssignment_3()); }
(rule__FunctionalPseudoClassSelector__ArgumentAssignment_3)
{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getArgumentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalPseudoClassSelector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalPseudoClassSelector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getRightParenthesisKeyword_4()); }

	KEYWORD_3 

{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LinearArgument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearArgument__Group__0__Impl
	rule__LinearArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getLinearArgumentAction_0()); }
(

)
{ after(grammarAccess.getLinearArgumentAccess().getLinearArgumentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearArgument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearArgument__Group__1__Impl
	rule__LinearArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getCoefficientAssignment_1()); }
(rule__LinearArgument__CoefficientAssignment_1)
{ after(grammarAccess.getLinearArgumentAccess().getCoefficientAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearArgument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearArgument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getGroup_2()); }
(rule__LinearArgument__Group_2__0)?
{ after(grammarAccess.getLinearArgumentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LinearArgument__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearArgument__Group_2__0__Impl
	rule__LinearArgument__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getConstantSignAssignment_2_0()); }
(rule__LinearArgument__ConstantSignAssignment_2_0)?
{ after(grammarAccess.getLinearArgumentAccess().getConstantSignAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinearArgument__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinearArgument__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getConstantAssignment_2_1()); }
(rule__LinearArgument__ConstantAssignment_2_1)
{ after(grammarAccess.getLinearArgumentAccess().getConstantAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Coefficient__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Coefficient__Group_1__0__Impl
	rule__Coefficient__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coefficient__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoefficientAccess().getCoefficientAction_1_0()); }
(

)
{ after(grammarAccess.getCoefficientAccess().getCoefficientAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Coefficient__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Coefficient__Group_1__1__Impl
	rule__Coefficient__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coefficient__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoefficientAccess().getIntAssignment_1_1()); }
(rule__Coefficient__IntAssignment_1_1)?
{ after(grammarAccess.getCoefficientAccess().getIntAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Coefficient__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Coefficient__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coefficient__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoefficientAccess().getNKeyword_1_2()); }

	KEYWORD_15 

{ after(grammarAccess.getCoefficientAccess().getNKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantArgument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantArgument__Group__0__Impl
	rule__ConstantArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantArgument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantArgumentAccess().getSignAssignment_0()); }
(rule__ConstantArgument__SignAssignment_0)?
{ after(grammarAccess.getConstantArgumentAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantArgument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantArgument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantArgumentAccess().getIntAssignment_1()); }
(rule__ConstantArgument__IntAssignment_1)
{ after(grammarAccess.getConstantArgumentAccess().getIntAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NegationSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationSelector__Group__0__Impl
	rule__NegationSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationSelectorAccess().getColonKeyword_0()); }

	KEYWORD_9 

{ after(grammarAccess.getNegationSelectorAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationSelector__Group__1__Impl
	rule__NegationSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationSelectorAccess().getNotKeyword_1()); }

	KEYWORD_42 

{ after(grammarAccess.getNegationSelectorAccess().getNotKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationSelector__Group__2__Impl
	rule__NegationSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationSelectorAccess().getSimpleSelectorAssignment_2()); }
(rule__NegationSelector__SimpleSelectorAssignment_2)
{ after(grammarAccess.getNegationSelectorAccess().getSimpleSelectorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegationSelector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegationSelector__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationSelector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationSelectorAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_3 

{ after(grammarAccess.getNegationSelectorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NumberLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group_0__0__Impl
	rule__NumberLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIntegerLiteralAction_0_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getIntegerLiteralAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIntAssignment_0_1()); }
(rule__NumberLiteral__IntAssignment_0_1)
{ after(grammarAccess.getNumberLiteralAccess().getIntAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group_1__0__Impl
	rule__NumberLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getDecimalLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getDecimalLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getDecimalAssignment_1_1()); }
(rule__NumberLiteral__DecimalAssignment_1_1)
{ after(grammarAccess.getNumberLiteralAccess().getDecimalAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SizeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group__0__Impl
	rule__SizeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getAlternatives_0()); }
(rule__SizeLiteral__Alternatives_0)
{ after(grammarAccess.getSizeLiteralAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getGroup_1()); }
(rule__SizeLiteral__Group_1__0)?
{ after(grammarAccess.getSizeLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SizeLiteral__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_0_0__0__Impl
	rule__SizeLiteral__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getQuantifiedSizeLiteralAction_0_0_0()); }
(

)
{ after(grammarAccess.getSizeLiteralAccess().getQuantifiedSizeLiteralAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_0_0__1__Impl
	rule__SizeLiteral__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getNumberAssignment_0_0_1()); }
(rule__SizeLiteral__NumberAssignment_0_0_1)
{ after(grammarAccess.getSizeLiteralAccess().getNumberAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getDimensionAssignment_0_0_2()); }
(rule__SizeLiteral__DimensionAssignment_0_0_2)?
{ after(grammarAccess.getSizeLiteralAccess().getDimensionAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SizeLiteral__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_0_1__0__Impl
	rule__SizeLiteral__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getQualifiedSizeLiteralAction_0_1_0()); }
(

)
{ after(grammarAccess.getSizeLiteralAccess().getQualifiedSizeLiteralAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getBarewordAssignment_0_1_1()); }
(rule__SizeLiteral__BarewordAssignment_0_1_1)
{ after(grammarAccess.getSizeLiteralAccess().getBarewordAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SizeLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_1__0__Impl
	rule__SizeLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getSolidusKeyword_1_0()); }

	KEYWORD_8 

{ after(grammarAccess.getSizeLiteralAccess().getSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_1__1__Impl
	rule__SizeLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getFontHeightLiteralFontHeightAction_1_1()); }
(

)
{ after(grammarAccess.getSizeLiteralAccess().getFontHeightLiteralFontHeightAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_1__2__Impl
	rule__SizeLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getLineHeightAssignment_1_2()); }
(rule__SizeLiteral__LineHeightAssignment_1_2)
{ after(grammarAccess.getSizeLiteralAccess().getLineHeightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeLiteral__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeLiteral__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getLineHeightDimensionAssignment_1_3()); }
(rule__SizeLiteral__LineHeightDimensionAssignment_1_3)?
{ after(grammarAccess.getSizeLiteralAccess().getLineHeightDimensionAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ColorLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorLiteral__Group_0__0__Impl
	rule__ColorLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getRGBColorAction_0_0()); }
(

)
{ after(grammarAccess.getColorLiteralAccess().getRGBColorAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getRgbAssignment_0_1()); }
(rule__ColorLiteral__RgbAssignment_0_1)
{ after(grammarAccess.getColorLiteralAccess().getRgbAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColorLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorLiteral__Group_1__0__Impl
	rule__ColorLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getNamedColorAction_1_0()); }
(

)
{ after(grammarAccess.getColorLiteralAccess().getNamedColorAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getColorAssignment_1_1()); }
(rule__ColorLiteral__ColorAssignment_1_1)
{ after(grammarAccess.getColorLiteralAccess().getColorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentColorLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__0__Impl
	rule__ComponentColorLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getComponentRGBColorAction_0_0()); }
(

)
{ after(grammarAccess.getComponentColorLiteralAccess().getComponentRGBColorAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__1__Impl
	rule__ComponentColorLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRgbKeyword_0_1()); }

	KEYWORD_37 

{ after(grammarAccess.getComponentColorLiteralAccess().getRgbKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__2__Impl
	rule__ComponentColorLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_0_2()); }

	KEYWORD_2 

{ after(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__3__Impl
	rule__ComponentColorLiteral__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRedAssignment_0_3()); }
(rule__ComponentColorLiteral__RedAssignment_0_3)
{ after(grammarAccess.getComponentColorLiteralAccess().getRedAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__4__Impl
	rule__ComponentColorLiteral__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_0_4()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__5__Impl
	rule__ComponentColorLiteral__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getGreenAssignment_0_5()); }
(rule__ComponentColorLiteral__GreenAssignment_0_5)
{ after(grammarAccess.getComponentColorLiteralAccess().getGreenAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__6__Impl
	rule__ComponentColorLiteral__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_0_6()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__7__Impl
	rule__ComponentColorLiteral__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getBlueAssignment_0_7()); }
(rule__ComponentColorLiteral__BlueAssignment_0_7)
{ after(grammarAccess.getComponentColorLiteralAccess().getBlueAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_0_8()); }

	KEYWORD_3 

{ after(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ComponentColorLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__0__Impl
	rule__ComponentColorLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getComponentRGBAlphaColorAction_1_0()); }
(

)
{ after(grammarAccess.getComponentColorLiteralAccess().getComponentRGBAlphaColorAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__1__Impl
	rule__ComponentColorLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRgbaKeyword_1_1()); }

	KEYWORD_44 

{ after(grammarAccess.getComponentColorLiteralAccess().getRgbaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__2__Impl
	rule__ComponentColorLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_1_2()); }

	KEYWORD_2 

{ after(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__3__Impl
	rule__ComponentColorLiteral__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRedAssignment_1_3()); }
(rule__ComponentColorLiteral__RedAssignment_1_3)
{ after(grammarAccess.getComponentColorLiteralAccess().getRedAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__4__Impl
	rule__ComponentColorLiteral__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_4()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__5__Impl
	rule__ComponentColorLiteral__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getGreenAssignment_1_5()); }
(rule__ComponentColorLiteral__GreenAssignment_1_5)
{ after(grammarAccess.getComponentColorLiteralAccess().getGreenAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__6__Impl
	rule__ComponentColorLiteral__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_6()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__7__Impl
	rule__ComponentColorLiteral__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getBlueAssignment_1_7()); }
(rule__ComponentColorLiteral__BlueAssignment_1_7)
{ after(grammarAccess.getComponentColorLiteralAccess().getBlueAssignment_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__8__Impl
	rule__ComponentColorLiteral__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_8()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__9__Impl
	rule__ComponentColorLiteral__Group_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getOpacityAssignment_1_9()); }
(rule__ComponentColorLiteral__OpacityAssignment_1_9)
{ after(grammarAccess.getComponentColorLiteralAccess().getOpacityAssignment_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_1__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_1__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_1__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_1_10()); }

	KEYWORD_3 

{ after(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ComponentColorLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__0__Impl
	rule__ComponentColorLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getComponentHSLColorAction_2_0()); }
(

)
{ after(grammarAccess.getComponentColorLiteralAccess().getComponentHSLColorAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__1__Impl
	rule__ComponentColorLiteral__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getHslKeyword_2_1()); }

	KEYWORD_34 

{ after(grammarAccess.getComponentColorLiteralAccess().getHslKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__2__Impl
	rule__ComponentColorLiteral__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_2_2()); }

	KEYWORD_2 

{ after(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__3__Impl
	rule__ComponentColorLiteral__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getHueAssignment_2_3()); }
(rule__ComponentColorLiteral__HueAssignment_2_3)
{ after(grammarAccess.getComponentColorLiteralAccess().getHueAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__4__Impl
	rule__ComponentColorLiteral__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_2_4()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__5__Impl
	rule__ComponentColorLiteral__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getSaturationAssignment_2_5()); }
(rule__ComponentColorLiteral__SaturationAssignment_2_5)
{ after(grammarAccess.getComponentColorLiteralAccess().getSaturationAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__6__Impl
	rule__ComponentColorLiteral__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_2_6()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__7__Impl
	rule__ComponentColorLiteral__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLightnessAssignment_2_7()); }
(rule__ComponentColorLiteral__LightnessAssignment_2_7)
{ after(grammarAccess.getComponentColorLiteralAccess().getLightnessAssignment_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_2__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_2__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_2__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_2_8()); }

	KEYWORD_3 

{ after(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_2_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ComponentColorLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__0__Impl
	rule__ComponentColorLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getComponentHSLAlphaColorAction_3_0()); }
(

)
{ after(grammarAccess.getComponentColorLiteralAccess().getComponentHSLAlphaColorAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__1__Impl
	rule__ComponentColorLiteral__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getHslaKeyword_3_1()); }

	KEYWORD_39 

{ after(grammarAccess.getComponentColorLiteralAccess().getHslaKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__2__Impl
	rule__ComponentColorLiteral__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_3_2()); }

	KEYWORD_2 

{ after(grammarAccess.getComponentColorLiteralAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__3__Impl
	rule__ComponentColorLiteral__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getHueAssignment_3_3()); }
(rule__ComponentColorLiteral__HueAssignment_3_3)
{ after(grammarAccess.getComponentColorLiteralAccess().getHueAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__4__Impl
	rule__ComponentColorLiteral__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_4()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__5__Impl
	rule__ComponentColorLiteral__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getSaturationAssignment_3_5()); }
(rule__ComponentColorLiteral__SaturationAssignment_3_5)
{ after(grammarAccess.getComponentColorLiteralAccess().getSaturationAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__6__Impl
	rule__ComponentColorLiteral__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_6()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__7__Impl
	rule__ComponentColorLiteral__Group_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLightnessAssignment_3_7()); }
(rule__ComponentColorLiteral__LightnessAssignment_3_7)
{ after(grammarAccess.getComponentColorLiteralAccess().getLightnessAssignment_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__8__Impl
	rule__ComponentColorLiteral__Group_3__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_8()); }

	KEYWORD_6 

{ after(grammarAccess.getComponentColorLiteralAccess().getCommaKeyword_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__9__Impl
	rule__ComponentColorLiteral__Group_3__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getOpacityAssignment_3_9()); }
(rule__ComponentColorLiteral__OpacityAssignment_3_9)
{ after(grammarAccess.getComponentColorLiteralAccess().getOpacityAssignment_3_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentColorLiteral__Group_3__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentColorLiteral__Group_3__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__Group_3__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_3_10()); }

	KEYWORD_3 

{ after(grammarAccess.getComponentColorLiteralAccess().getRightParenthesisKeyword_3_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ColorComponentLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorComponentLiteral__Group__0__Impl
	rule__ColorComponentLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorComponentLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorComponentLiteralAccess().getNumberAssignment_0()); }
(rule__ColorComponentLiteral__NumberAssignment_0)
{ after(grammarAccess.getColorComponentLiteralAccess().getNumberAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorComponentLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorComponentLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorComponentLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorComponentLiteralAccess().getPercentageAssignment_1()); }
(rule__ColorComponentLiteral__PercentageAssignment_1)?
{ after(grammarAccess.getColorComponentLiteralAccess().getPercentageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0__0__Impl
	rule__FunctionCallLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getFunctionAssignment_0_0()); }
(rule__FunctionCallLiteral__FunctionAssignment_0_0)
{ after(grammarAccess.getFunctionCallLiteralAccess().getFunctionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0__1__Impl
	rule__FunctionCallLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getLeftParenthesisKeyword_0_1()); }

	KEYWORD_2 

{ after(grammarAccess.getFunctionCallLiteralAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0__2__Impl
	rule__FunctionCallLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getGroup_0_2()); }
(rule__FunctionCallLiteral__Group_0_2__0)?
{ after(grammarAccess.getFunctionCallLiteralAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getRightParenthesisKeyword_0_3()); }

	KEYWORD_3 

{ after(grammarAccess.getFunctionCallLiteralAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallLiteral__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0_2__0__Impl
	rule__FunctionCallLiteral__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getArgumentsAssignment_0_2_0()); }
(rule__FunctionCallLiteral__ArgumentsAssignment_0_2_0)
{ after(grammarAccess.getFunctionCallLiteralAccess().getArgumentsAssignment_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getGroup_0_2_1()); }
(rule__FunctionCallLiteral__Group_0_2_1__0)*
{ after(grammarAccess.getFunctionCallLiteralAccess().getGroup_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallLiteral__Group_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0_2_1__0__Impl
	rule__FunctionCallLiteral__Group_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getCommaKeyword_0_2_1_0()); }

	KEYWORD_6 

{ after(grammarAccess.getFunctionCallLiteralAccess().getCommaKeyword_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getArgumentsAssignment_0_2_1_1()); }
(rule__FunctionCallLiteral__ArgumentsAssignment_0_2_1_1)
{ after(grammarAccess.getFunctionCallLiteralAccess().getArgumentsAssignment_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__0__Impl
	rule__FunctionCallLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getAlphaLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getFunctionCallLiteralAccess().getAlphaLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__1__Impl
	rule__FunctionCallLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getAlphaKeyword_1_1()); }

	KEYWORD_48 

{ after(grammarAccess.getFunctionCallLiteralAccess().getAlphaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__2__Impl
	rule__FunctionCallLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getLeftParenthesisKeyword_1_2()); }

	KEYWORD_2 

{ after(grammarAccess.getFunctionCallLiteralAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__3__Impl
	rule__FunctionCallLiteral__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getOpacityKeyword_1_3()); }

	KEYWORD_62 

{ after(grammarAccess.getFunctionCallLiteralAccess().getOpacityKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__4__Impl
	rule__FunctionCallLiteral__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getEqualsSignKeyword_1_4()); }

	KEYWORD_11 

{ after(grammarAccess.getFunctionCallLiteralAccess().getEqualsSignKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__5__Impl
	rule__FunctionCallLiteral__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getOpacityAssignment_1_5()); }
(rule__FunctionCallLiteral__OpacityAssignment_1_5)
{ after(grammarAccess.getFunctionCallLiteralAccess().getOpacityAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallLiteral__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getRightParenthesisKeyword_1_6()); }

	KEYWORD_3 

{ after(grammarAccess.getFunctionCallLiteralAccess().getRightParenthesisKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Stylesheet__CharSetAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharSetSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getStylesheetAccess().getCharSetSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsImportDeclarationParserRuleCall_1_0()); }
	ruleImportDeclaration{ after(grammarAccess.getStylesheetAccess().getImportsImportDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getStatementsCSSTopLevelStatementParserRuleCall_2_0()); }
	ruleCSSTopLevelStatement{ after(grammarAccess.getStylesheetAccess().getStatementsCSSTopLevelStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__ImportURIAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getImportDeclarationAccess().getImportURISTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__UrlAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getUrlURLTerminalRuleCall_1_1_0()); }
	RULE_URL{ after(grammarAccess.getImportDeclarationAccess().getUrlURLTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__MediaAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getMediaIDENTTerminalRuleCall_2_0_0()); }
	RULE_IDENT{ after(grammarAccess.getImportDeclarationAccess().getMediaIDENTTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__MediaAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getMediaIDENTTerminalRuleCall_2_1_1_0()); }
	RULE_IDENT{ after(grammarAccess.getImportDeclarationAccess().getMediaIDENTTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__MediaQueriesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMediaQueriesMediaQueryParserRuleCall_1_0()); }
	ruleMediaQuery{ after(grammarAccess.getMediaDeclarationAccess().getMediaQueriesMediaQueryParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__MediaAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMediaMediaQueryParserRuleCall_2_1_0()); }
	ruleMediaQuery{ after(grammarAccess.getMediaDeclarationAccess().getMediaMediaQueryParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaDeclaration__MembersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaDeclarationAccess().getMembersMediaDeclarationMembersParserRuleCall_4_0()); }
	ruleMediaDeclarationMembers{ after(grammarAccess.getMediaDeclarationAccess().getMembersMediaDeclarationMembersParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__OnlyAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getOnlyOnlyKeyword_0_0_0_0()); }
(
{ before(grammarAccess.getMediaQueryAccess().getOnlyOnlyKeyword_0_0_0_0()); }

	KEYWORD_43 

{ after(grammarAccess.getMediaQueryAccess().getOnlyOnlyKeyword_0_0_0_0()); }
)

{ after(grammarAccess.getMediaQueryAccess().getOnlyOnlyKeyword_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__NotAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getNotNotKeyword_0_0_1_0()); }
(
{ before(grammarAccess.getMediaQueryAccess().getNotNotKeyword_0_0_1_0()); }

	KEYWORD_35 

{ after(grammarAccess.getMediaQueryAccess().getNotNotKeyword_0_0_1_0()); }
)

{ after(grammarAccess.getMediaQueryAccess().getNotNotKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__MediaTypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getMediaTypeIDENTTerminalRuleCall_0_1_0()); }
	RULE_IDENT{ after(grammarAccess.getMediaQueryAccess().getMediaTypeIDENTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__ExpressionsAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_0_2_1_0()); }
	ruleMediaQueryExpression{ after(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_1_0_0()); }
	ruleMediaQueryExpression{ after(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQuery__ExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_1_1_1_0()); }
	ruleMediaQueryExpression{ after(grammarAccess.getMediaQueryAccess().getExpressionsMediaQueryExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getFeatureIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getMediaQueryExpressionAccess().getFeatureIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MediaQueryExpression__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaQueryExpressionAccess().getExpressionValueLiteralParserRuleCall_2_1_0()); }
	ruleValueLiteral{ after(grammarAccess.getMediaQueryExpressionAccess().getExpressionValueLiteralParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__PseudoPageAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getPseudoPageIDENTTerminalRuleCall_1_1_0()); }
	RULE_IDENT{ after(grammarAccess.getPageDeclarationAccess().getPseudoPageIDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PageDeclaration__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageDeclarationAccess().getBodyRuleSetBodyParserRuleCall_2_0()); }
	ruleRuleSetBody{ after(grammarAccess.getPageDeclarationAccess().getBodyRuleSetBodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getNamespaceDeclarationAccess().getNameIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__UrlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getUrlAlternatives_2_0()); }
(rule__NamespaceDeclaration__UrlAlternatives_2_0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getUrlAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontFaceDeclaration__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFaceDeclarationAccess().getBodyRuleSetBodyParserRuleCall_1_0()); }
	ruleRuleSetBody{ after(grammarAccess.getFontFaceDeclarationAccess().getBodyRuleSetBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__SelectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
	ruleSelector{ after(grammarAccess.getRuleSetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__SelectorsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); }
	ruleSelector{ after(grammarAccess.getRuleSetAccess().getSelectorsSelectorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetAccess().getBodyRuleSetBodyParserRuleCall_2_0()); }
	ruleRuleSetBody{ after(grammarAccess.getRuleSetAccess().getBodyRuleSetBodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__DeclarationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getDeclarationsPropertyDeclarationParserRuleCall_2_0_0()); }
	rulePropertyDeclaration{ after(grammarAccess.getRuleSetBodyAccess().getDeclarationsPropertyDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSetBody__DeclarationsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleSetBodyAccess().getDeclarationsPropertyDeclarationParserRuleCall_2_1_1_0()); }
	rulePropertyDeclaration{ after(grammarAccess.getRuleSetBodyAccess().getDeclarationsPropertyDeclarationParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KnownPropertyDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertyDeclarationAccess().getNameKnownPropertiesEnumRuleCall_0_0()); }
	ruleKnownProperties{ after(grammarAccess.getKnownPropertyDeclarationAccess().getNameKnownPropertiesEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KnownPropertyDeclaration__ValuesListsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKnownPropertyDeclarationAccess().getValuesListsPropertyValuesListsParserRuleCall_2_0()); }
	rulePropertyValuesLists{ after(grammarAccess.getKnownPropertyDeclarationAccess().getValuesListsPropertyValuesListsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnrecognizedPropertyDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getNamePropertyNameParserRuleCall_0_0()); }
	rulePropertyName{ after(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getNamePropertyNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnrecognizedPropertyDeclaration__ValuesListsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getValuesListsPropertyValuesListsParserRuleCall_2_0()); }
	rulePropertyValuesLists{ after(grammarAccess.getUnrecognizedPropertyDeclarationAccess().getValuesListsPropertyValuesListsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesLists__ListsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListsAccess().getListsPropertyValuesListParserRuleCall_0_0()); }
	rulePropertyValuesList{ after(grammarAccess.getPropertyValuesListsAccess().getListsPropertyValuesListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesLists__ListsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListsAccess().getListsPropertyValuesListParserRuleCall_1_1_0()); }
	rulePropertyValuesList{ after(grammarAccess.getPropertyValuesListsAccess().getListsPropertyValuesListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValuesList__ValuesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValuesListAccess().getValuesPropertyValueParserRuleCall_0()); }
	rulePropertyValue{ after(grammarAccess.getPropertyValuesListAccess().getValuesPropertyValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getValueValueLiteralParserRuleCall_0_0()); }
	ruleValueLiteral{ after(grammarAccess.getPropertyValueAccess().getValueValueLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__ImportantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getImportantImportantKeyword_1_0()); }
(
{ before(grammarAccess.getPropertyValueAccess().getImportantImportantKeyword_1_0()); }

	KEYWORD_67 

{ after(grammarAccess.getPropertyValueAccess().getImportantImportantKeyword_1_0()); }
)

{ after(grammarAccess.getPropertyValueAccess().getImportantImportantKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsIAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsIWSTerminalRuleCall_1_0_1_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsIWSTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__RightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_0_2_0()); }
	ruleSimpleSelectorSequence{ after(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsLAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_1_1_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsRAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_1_3_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__RightAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_1_4_0()); }
	ruleSimpleSelectorSequence{ after(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsLAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_2_1_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsRAssignment_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_2_3_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__RightAssignment_1_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_2_4_0()); }
	ruleSimpleSelectorSequence{ after(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsLAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_3_1_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsLWSTerminalRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__WsRAssignment_1_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_3_3_0()); }
	RULE_WS{ after(grammarAccess.getCombinatorExpressionAccess().getWsRWSTerminalRuleCall_1_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombinatorExpression__RightAssignment_1_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_3_4_0()); }
	ruleSimpleSelectorSequence{ after(grammarAccess.getCombinatorExpressionAccess().getRightSimpleSelectorSequenceParserRuleCall_1_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__HeadAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getHeadAlternatives_1_0_0_0()); }
(rule__SimpleSelectorSequence__HeadAlternatives_1_0_0_0)
{ after(grammarAccess.getSimpleSelectorSequenceAccess().getHeadAlternatives_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__SimpleSelectorsAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsTailSimpleSelectorParserRuleCall_1_0_1_0()); }
	ruleTailSimpleSelector{ after(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsTailSimpleSelectorParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorSequence__SimpleSelectorsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsTailSimpleSelectorParserRuleCall_1_1_0()); }
	ruleTailSimpleSelector{ after(grammarAccess.getSimpleSelectorSequenceAccess().getSimpleSelectorsTailSimpleSelectorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelector__NamespacePrefixAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSelectorAccess().getNamespacePrefixNamespacePrefixParserRuleCall_0_0()); }
	ruleNamespacePrefix{ after(grammarAccess.getTypeSelectorAccess().getNamespacePrefixNamespacePrefixParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelector__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSelectorAccess().getTypeIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getTypeSelectorAccess().getTypeIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacePrefix__NamespaceAssignment_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacePrefixAccess().getNamespaceNamespaceDeclarationCrossReference_0_0_0_1_0()); }
(
{ before(grammarAccess.getNamespacePrefixAccess().getNamespaceNamespaceDeclarationIDENTTerminalRuleCall_0_0_0_1_0_1()); }
	RULE_IDENT{ after(grammarAccess.getNamespacePrefixAccess().getNamespaceNamespaceDeclarationIDENTTerminalRuleCall_0_0_0_1_0_1()); }
)
{ after(grammarAccess.getNamespacePrefixAccess().getNamespaceNamespaceDeclarationCrossReference_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__NamespacePrefixAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getNamespacePrefixNamespacePrefixParserRuleCall_1_0()); }
	ruleNamespacePrefix{ after(grammarAccess.getUniversalSelectorAccess().getNamespacePrefixNamespacePrefixParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__AttributeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getAttributeAttributeParserRuleCall_1_0()); }
	ruleAttribute{ after(grammarAccess.getAttributeSelectorAccess().getAttributeAttributeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__MatcherAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getMatcherAttributeSelectorMatchersEnumRuleCall_2_0_0()); }
	ruleAttributeSelectorMatchers{ after(grammarAccess.getAttributeSelectorAccess().getMatcherAttributeSelectorMatchersEnumRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getValueAttributeValueLiteralParserRuleCall_2_1_0()); }
	ruleAttributeValueLiteral{ after(grammarAccess.getAttributeSelectorAccess().getValueAttributeValueLiteralParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NamespacePrefixAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNamespacePrefixNamespacePrefixParserRuleCall_0_0()); }
	ruleNamespacePrefix{ after(grammarAccess.getAttributeAccess().getNamespacePrefixNamespacePrefixParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getAttributeAccess().getNameIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueAlternatives_0_1_0()); }
(rule__AttributeValueLiteral__ValueAlternatives_0_1_0)
{ after(grammarAccess.getAttributeValueLiteralAccess().getValueAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getAttributeValueLiteralAccess().getValueINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValueLiteral__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeValueLiteralAccess().getValueDECIMALTerminalRuleCall_2_1_0()); }
	RULE_DECIMAL{ after(grammarAccess.getAttributeValueLiteralAccess().getValueDECIMALTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IDSelector__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIDSelectorAccess().getNameAlternatives_0()); }
(rule__IDSelector__NameAlternatives_0)
{ after(grammarAccess.getIDSelectorAccess().getNameAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassSelectorAccess().getNameDOT_IDTerminalRuleCall_0()); }
	RULE_DOT_ID{ after(grammarAccess.getClassSelectorAccess().getNameDOT_IDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoArgsPseudoClassSelector__PseudoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoArgsPseudoClassSelectorAccess().getPseudoNoArgsPseudosEnumRuleCall_1_0()); }
	ruleNoArgsPseudos{ after(grammarAccess.getNoArgsPseudoClassSelectorAccess().getPseudoNoArgsPseudosEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoElementSelector__DoubleSemiColonAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonColonKeyword_1_0()); }
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonColonKeyword_1_0()); }

	KEYWORD_9 

{ after(grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonColonKeyword_1_0()); }
)

{ after(grammarAccess.getPseudoElementSelectorAccess().getDoubleSemiColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoElementSelector__PseudoAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoElementSelectorAccess().getPseudoPseudoElementsEnumRuleCall_2_0()); }
	rulePseudoElements{ after(grammarAccess.getPseudoElementSelectorAccess().getPseudoPseudoElementsEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LanguagePseudoClassSelector__LangugageIdAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguagePseudoClassSelectorAccess().getLangugageIdIDENTTerminalRuleCall_3_0()); }
	RULE_IDENT{ after(grammarAccess.getLanguagePseudoClassSelectorAccess().getLangugageIdIDENTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__PseudoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getPseudoFunctionalPseudoClassesEnumRuleCall_1_0()); }
	ruleFunctionalPseudoClasses{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getPseudoFunctionalPseudoClassesEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalPseudoClassSelector__ArgumentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalPseudoClassSelectorAccess().getArgumentTypeArgumentParserRuleCall_3_0()); }
	ruleTypeArgument{ after(grammarAccess.getFunctionalPseudoClassSelectorAccess().getArgumentTypeArgumentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__CoefficientAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getCoefficientCoefficientParserRuleCall_1_0()); }
	ruleCoefficient{ after(grammarAccess.getLinearArgumentAccess().getCoefficientCoefficientParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__ConstantSignAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getConstantSignAlternatives_2_0_0()); }
(rule__LinearArgument__ConstantSignAlternatives_2_0_0)
{ after(grammarAccess.getLinearArgumentAccess().getConstantSignAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinearArgument__ConstantAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinearArgumentAccess().getConstantINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getLinearArgumentAccess().getConstantINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coefficient__IdentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoefficientAccess().getIdentIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getCoefficientAccess().getIdentIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Coefficient__IntAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoefficientAccess().getIntINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getCoefficientAccess().getIntINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantArgument__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantArgumentAccess().getSignAlternatives_0_0()); }
(rule__ConstantArgument__SignAlternatives_0_0)
{ after(grammarAccess.getConstantArgumentAccess().getSignAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantArgument__IntAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantArgumentAccess().getIntINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getConstantArgumentAccess().getIntINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParityArgument__ParityAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParityArgumentAccess().getParityParitiesEnumRuleCall_0()); }
	ruleParities{ after(grammarAccess.getParityArgumentAccess().getParityParitiesEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegationSelector__SimpleSelectorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegationSelectorAccess().getSimpleSelectorNegationSimpleSelectorParserRuleCall_2_0()); }
	ruleNegationSimpleSelector{ after(grammarAccess.getNegationSelectorAccess().getSimpleSelectorNegationSimpleSelectorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__IntAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getIntINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getNumberLiteralAccess().getIntINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__DecimalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getDecimalDECIMALTerminalRuleCall_1_1_0()); }
	RULE_DECIMAL{ after(grammarAccess.getNumberLiteralAccess().getDecimalDECIMALTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__NumberAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getNumberNumberLiteralParserRuleCall_0_0_1_0()); }
	ruleNumberLiteral{ after(grammarAccess.getSizeLiteralAccess().getNumberNumberLiteralParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__DimensionAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getDimensionDimensionsEnumRuleCall_0_0_2_0()); }
	ruleDimensions{ after(grammarAccess.getSizeLiteralAccess().getDimensionDimensionsEnumRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__BarewordAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getBarewordIDENTTerminalRuleCall_0_1_1_0()); }
	RULE_IDENT{ after(grammarAccess.getSizeLiteralAccess().getBarewordIDENTTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__LineHeightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getLineHeightNumberLiteralParserRuleCall_1_2_0()); }
	ruleNumberLiteral{ after(grammarAccess.getSizeLiteralAccess().getLineHeightNumberLiteralParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeLiteral__LineHeightDimensionAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeLiteralAccess().getLineHeightDimensionDimensionsEnumRuleCall_1_3_0()); }
	ruleDimensions{ after(grammarAccess.getSizeLiteralAccess().getLineHeightDimensionDimensionsEnumRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__RgbAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getRgbHEX_COLORTerminalRuleCall_0_1_0()); }
	RULE_HEX_COLOR{ after(grammarAccess.getColorLiteralAccess().getRgbHEX_COLORTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorLiteral__ColorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorLiteralAccess().getColorColorNamesEnumRuleCall_1_1_0()); }
	ruleColorNames{ after(grammarAccess.getColorLiteralAccess().getColorColorNamesEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__RedAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRedColorComponentLiteralParserRuleCall_0_3_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getRedColorComponentLiteralParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__GreenAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getGreenColorComponentLiteralParserRuleCall_0_5_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getGreenColorComponentLiteralParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__BlueAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getBlueColorComponentLiteralParserRuleCall_0_7_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getBlueColorComponentLiteralParserRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__RedAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getRedColorComponentLiteralParserRuleCall_1_3_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getRedColorComponentLiteralParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__GreenAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getGreenColorComponentLiteralParserRuleCall_1_5_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getGreenColorComponentLiteralParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__BlueAssignment_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getBlueColorComponentLiteralParserRuleCall_1_7_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getBlueColorComponentLiteralParserRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__OpacityAssignment_1_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getOpacityColorComponentLiteralParserRuleCall_1_9_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getOpacityColorComponentLiteralParserRuleCall_1_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__HueAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getHueColorComponentLiteralParserRuleCall_2_3_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getHueColorComponentLiteralParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__SaturationAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getSaturationColorComponentLiteralParserRuleCall_2_5_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getSaturationColorComponentLiteralParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__LightnessAssignment_2_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLightnessColorComponentLiteralParserRuleCall_2_7_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getLightnessColorComponentLiteralParserRuleCall_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__HueAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getHueColorComponentLiteralParserRuleCall_3_3_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getHueColorComponentLiteralParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__SaturationAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getSaturationColorComponentLiteralParserRuleCall_3_5_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getSaturationColorComponentLiteralParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__LightnessAssignment_3_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getLightnessColorComponentLiteralParserRuleCall_3_7_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getLightnessColorComponentLiteralParserRuleCall_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentColorLiteral__OpacityAssignment_3_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentColorLiteralAccess().getOpacityColorComponentLiteralParserRuleCall_3_9_0()); }
	ruleColorComponentLiteral{ after(grammarAccess.getComponentColorLiteralAccess().getOpacityColorComponentLiteralParserRuleCall_3_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorComponentLiteral__NumberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorComponentLiteralAccess().getNumberNumberLiteralParserRuleCall_0_0()); }
	ruleNumberLiteral{ after(grammarAccess.getColorComponentLiteralAccess().getNumberNumberLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorComponentLiteral__PercentageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorComponentLiteralAccess().getPercentagePercentSignKeyword_1_0()); }
(
{ before(grammarAccess.getColorComponentLiteralAccess().getPercentagePercentSignKeyword_1_0()); }

	KEYWORD_1 

{ after(grammarAccess.getColorComponentLiteralAccess().getPercentagePercentSignKeyword_1_0()); }
)

{ after(grammarAccess.getColorComponentLiteralAccess().getPercentagePercentSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__URLLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLLiteralAccess().getValueURLTerminalRuleCall_0()); }
	RULE_URL{ after(grammarAccess.getURLLiteralAccess().getValueURLTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallLiteral__FunctionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getFunctionIDENTTerminalRuleCall_0_0_0()); }
	RULE_IDENT{ after(grammarAccess.getFunctionCallLiteralAccess().getFunctionIDENTTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__ArgumentsAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getArgumentsValueLiteralParserRuleCall_0_2_0_0()); }
	ruleValueLiteral{ after(grammarAccess.getFunctionCallLiteralAccess().getArgumentsValueLiteralParserRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__ArgumentsAssignment_0_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getArgumentsValueLiteralParserRuleCall_0_2_1_1_0()); }
	ruleValueLiteral{ after(grammarAccess.getFunctionCallLiteralAccess().getArgumentsValueLiteralParserRuleCall_0_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallLiteral__OpacityAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallLiteralAccess().getOpacityNumberLiteralParserRuleCall_1_5_0()); }
	ruleNumberLiteral{ after(grammarAccess.getFunctionCallLiteralAccess().getOpacityNumberLiteralParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


